{
  "url": "https://developers.cardano.org/docs/operate-a-stake-pool/hardening-server",
  "content": "![Cardano Logo](/img/cardano-black.svg)\n![Cardano Logo](/img/cardano-white.svg)\n\n# Hardening the server\n\nBefore installing your Cardano node, you need to have a clean and secured OS. This guide explains how to secure your server, in 10 steps.\n\n### Prerequisites[​](#prerequisites \"Direct link to Prerequisites\")\n\n### 1- Create a non-root user for your Cardano node[​](#1--create-a-non-root-user-for-your-cardano-node \"Direct link to 1- Create a non-root user for your Cardano node\")\n\nFirst thing first : you should never use the root account to connect to your server and manage it. Instead, use a non-root account, that can use sudo. We are going to create one.\n\n`ssh <defaultuser>@server-ip`\n`sudo useradd -m -s /bin/bash cardano`\n`sudo passwd cardano`\n`sudo usermod -aG sudo cardano`\n`ssh cardano@server-ip`\n`sudo userdel <defaultuser>`\n\n### 2- Disable root[​](#2--disable-root \"Direct link to 2- Disable root\")\n\nYou should never use root account. Always use sudo to run commands with privileges. We are going to disable it.\n\n`sudo passwd -l root`\n\n### 3- Update System[​](#3--update-system \"Direct link to 3- Update System\")\n\nIt's time to update your system with the latest pathes available.\n\n`sudo apt-get update -y  \nsudo apt-get upgrade -y  \nsudo apt-get autoremove  \nsudo apt-get autoclean`\n\nReboot your server.\n\n`sudo reboot`\n\n### 4- Activate Unattended-upgrades for automatic security updates[​](#4--activate-unattended-upgrades-for-automatic-security-updates \"Direct link to 4- Activate Unattended-upgrades for automatic security updates\")\n\nNext step is to enable unattended upgrades to automatically install security updates.\n\nBy default, the unattended-upgrades service **only installs security updates** automatically. These updates **WONT** make your server automatically reboot.\n\nThe primary argument against enabling unattended-upgrades is that one day, a less stable package may install and cause stability or dependencies issues. While this argument is technically valid, the fact remains that without this package installed and enabled, it's more likely that a Linux server might host a software with remotely exploitable security vulnerabilities.\n\n`sudo apt-get install unattended-upgrades  \nsudo dpkg-reconfigure -plow unattended-upgrades`\n\n### 5- Generate SSH keys[​](#5--generate-ssh-keys \"Direct link to 5- Generate SSH keys\")\n\nThe next step might be one of the most important things to do, to secure your server. Passwords are not safe to use. Instead, use SSH keys. We are going to create a new SSH key pair on your local machine. I strongly recommend using ED25519 algorithm.\n\n#### On your local machine[​](#on-your-local-machine \"Direct link to On your local machine\")\n\n`ssh-keygen -t ed25519`\n`ssh-copy-id -i $HOME/.ssh/<filename> cardano@server-ip`\n`ssh cardano@server-ip`\n\nYour private SSH key is what allow you to connect to your server. It is stored on your local machine. You should backup it to a secured cold storage, and never ever share it\n\n### 6- Hardening SSH configuration[​](#6--hardening-ssh-configuration \"Direct link to 6- Hardening SSH configuration\")\n\nThe next-step is to tweak the sshd\\_config on your server, to make it much more secured\n\n`sudo nano /etc/ssh/sshd_config`\n`PubkeyAuthentication yes  \nPasswordAuthentication no  \nPermitRootLogin prohibit-password  \nPermitEmptyPasswords no  \nX11Forwarding no  \nTCPKeepAlive no  \nCompression no  \nAllowAgentForwarding no  \nAllowTcpForwarding no  \nKbdInteractiveAuthentication no`\n`Port <custom port number>`\n`sudo sshd -t`\n`sudo systemctl restart sshd`\n`ssh cardano@server-ip -p <custom port number>`\n\n### 7- Firewall configuration[​](#7--firewall-configuration \"Direct link to 7- Firewall configuration\")\n\nWe are going to use UFW firewall to secure network access to your Cardano node. We are only focusing on ports that are used for SSH, and Cardano node. If you want to use Grafana and Prometheus for monitoring, please, refer to this [guide](/docs/operate-a-stake-pool/grafana-dashboard-tutorial), to add appropriate ports to your UFW configuration.\n\n#### On your Relay Node :[​](#on-your-relay-node- \"Direct link to On your Relay Node :\")\n\n`sudo ufw default deny incoming  \nsudo ufw default allow outgoing  \nsudo ufw allow to any proto tcp port <CUSTOM SSHD PORT>  \nsudo ufw allow to any proto tcp port <YOUR CARDANO NODE PORT>  \nsudo ufw enable`\n\n#### On your Block Producer Node :[​](#on-your-block-producer-node- \"Direct link to On your Block Producer Node :\")\n\n`sudo ufw default deny incoming  \nsudo ufw default allow outgoing  \nsudo ufw allow to any proto tcp port <custom sshd port>  \nsudo ufw allow from <RELAY 1 NODE IP> to any proto tcp port <YOUR CARDANO NODE PORT>  \nsudo ufw allow from <RELAY 2 NODE IP> to any proto tcp port <YOUR CARDANO NODE PORT>  \nsudo ufw enable`\n\nIf you want to permit SSH connections to your node from specific IP, replace :\n\n`sudo ufw allow to any proto tcp port <CUSTOM SSHD PORT>`\n\nby\n\n`sudo ufw allow from <SPECIFIC IP> to any proto tcp port <CUSTOM SSHD PORT>`\n\n### 8- Fail 2 ban installation and configuration[​](#8--fail-2-ban-installation-and-configuration \"Direct link to 8- Fail 2 ban installation and configuration\")\n\nFail2ban is a very useful tool to block repetitive intrusion attempts. It can detect failed logins from specific IP and patterns, and blacklist it.\n\nInstallation and service activation :\n\n`sudo apt-get install fail2ban -y   \nsudo systemctl start fail2ban  \nsudo systemctl enable fail2ban`\n\nCreate a jail.local file and open it\n\n`sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local  \nsudo nano /etc/fail2ban/jail.local`\n\nLocate the [DEFAULT] block and adjust to your needs.\nHere is a configuration example that allows 2 logins attempts within 10minutes, and ban for 1hour any IP that fails. After 1h, if the IP tries again and fails, the bantime will be incremented by factor \\*2. The maximum bantime is set to 5 weeks.\n\n`bantime = 1h  \nbantime.increment = true  \nbantime.factor = 2  \nbantime.maxtime = 5w  \nfindtime = 10m  \nmaxretry = 2`\n\nLocate the [sshd] block and adjust to your needs.\n\n`mode = aggressive  \nenabled = true  \nport = <YOUR SSHD CUSTOM PORT>  \nfilter = sshd  \nmaxretry = 2  \nlogpath = /var/log/auth.log  \nbackend = %(sshd_backend)s`\n\nSave and close. Open the sshd.conf filter file\n\n`sudo nano /etc/fail2ban/filter.d/sshd.conf`\n\nLocate the mode variable and set it to \"aggressive\"\n\n`mode = aggressive`\n\nSave and close.\n\nRestart fail2ban\n\n`sudo systemctl restart fail2ban`\n\nOnce again, please adjust fail2ban configuration above to your needs. You might want to allow more than 2 failed attempts, or decrease bantime\n\n### 9- /etc/sysctl.conf hardening[​](#9--etcsysctlconf-hardening \"Direct link to 9- /etc/sysctl.conf hardening\")\n\nsysctl allows you to make changes to your linux kernel, and set advanced security options of the TCP/IP stack, and system settings. Here is a configuration recommendation to prevent some attacks on IPv4 networking layer.\n\nOpen /etc/sysctl.conf file\n\n`sudo nano /etc/sysctl.conf`\n\nAdd these options at the end of the file\n\n`# Avoid a smurf attack  \nnet.ipv4.icmp_echo_ignore_broadcasts = 1  \n  \n# Turn on protection for bad icmp error messages  \nnet.ipv4.icmp_ignore_bogus_error_responses = 1  \n  \n# Turn on syncookies for SYN flood attack protection  \nnet.ipv4.tcp_syncookies = 1  \n  \n# Turn on and log spoofed, source routed, and redirect packets  \nnet.ipv4.conf.all.log_martians = 1  \nnet.ipv4.conf.default.log_martians = 1  \n  \n# No source routed packets here  \nnet.ipv4.conf.all.accept_source_route = 0  \nnet.ipv4.conf.default.accept_source_route = 0  \n  \n# Increase TCP max buffer size setable using setsockopt()  \nnet.ipv4.tcp_rmem = 4096 87380 8388608  \nnet.ipv4.tcp_wmem = 4096 87380 8388608  \n  \n# No redirects  \nnet.ipv4.conf.all.accept_redirects = 0  \nnet.ipv4.conf.default.accept_redirects = 0  \nnet.ipv4.conf.all.secure_redirects = 0  \n  \n## Disable packet forwarding  \nnet.ipv4.ip_forward = 0  \n  \n# Synflood protection  \nnet.ipv4.tcp_synack_retries = 5`\n\nSave and close. Reload sysctl\n\n`sudo sysctl -p`\n\n### 10- Shared Memory hardening[​](#10--shared-memory-hardening \"Direct link to 10- Shared Memory hardening\")\n\nShared memory can be used in an attack against a running service. To secure it, modify /etc/fstab\n\n`sudo nano /etc/fstab`\n\nAdd the following line at the end of the file\n\n`tmpfs /run/shm tmpfs ro,noexec,nosuid 0 0`\n\nSave and close. Reboot your server\n\n`sudo reboot`",
  "images": [],
  "extraction_metadata": {
    "batch_number": 9,
    "extraction_timestamp": "2025-09-19T14:05:00.496633",
    "extraction_time": 2.430634021759033,
    "source": "tavily_api_raw"
  }
}