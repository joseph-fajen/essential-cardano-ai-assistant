{
  "url": "https://developers.cardano.org/docs/get-started/cardanocli-js",
  "content": "![Cardano Logo](/img/cardano-black.svg)\n![Cardano Logo](/img/cardano-white.svg)\n\n# Get Started with cardanocli-js\n\ncardanocli-js wraps the cardano-cli in JavaScript and makes it possible to interact with the cli-commands much faster and more efficient.\n\n## Prerequisites[​](#prerequisites \"Direct link to Prerequisites\")\n\n`cardano-node >= 1.26.1`\n`node.js >= 12.19.0`\n\n## Install[​](#install \"Direct link to Install\")\n\n#### NPM[​](#npm \"Direct link to NPM\")\n\n`npm install cardanocli-js`\n\n#### From source[​](#from-source \"Direct link to From source\")\n\n`git clone https://github.com/Berry-Pool/cardanocli-js.git  \ncd cardanocli-js  \nnpm install`\n\n## Get started[​](#get-started \"Direct link to Get started\")\n\n`const CardanocliJs = require(\"cardanocli-js\");  \nconst shelleyGenesisPath = \"/home/ada/mainnet-shelley-genesis.json\";  \n  \nconst cardanocliJs = new CardanocliJs({ shelleyGenesisPath });  \n  \nconst createWallet = (account) => {  \n cardanocliJs.addressKeyGen(account);  \n cardanocliJs.stakeAddressKeyGen(account);  \n cardanocliJs.stakeAddressBuild(account);  \n cardanocliJs.addressBuild(account);  \n return cardanocliJs.wallet(account);  \n};  \n  \nconst createPool = (name) => {  \n cardanocliJs.nodeKeyGenKES(name);  \n cardanocliJs.nodeKeyGen(name);  \n cardanocliJs.nodeIssueOpCert(name);  \n cardanocliJs.nodeKeyGenVRF(name);  \n return cardanocliJs.pool(name);  \n};  \n  \nconst wallet = createWallet(\"Ada\");  \nconst pool = createPool(\"Berry\");  \n  \nconsole.log(wallet.paymentAddr);  \nconsole.log(pool.vrf.vkey);`\n\n## For testnets for example this is the working version[​](#for-testnets-for-example-this-is-the-working-version \"Direct link to For testnets for example this is the working version\")\n\n`const CardanocliJs = require(\"cardanocli-js\");  \nconst shelleyGenesisPath = \"../..//tconfig/testnet-shelley-genesis.json\";  \nconst options={}  \noptions.shelleyGenesisPath = shelleyGenesisPath  \noptions.network = \"testnet-magic 1097911063\"  \n  \nconst cardanocliJs = new CardanocliJs(options);  \n  \nconst createWallet = (account) => {  \n try{  \n paymentKeys = cardanocliJs.addressKeyGen(account);  \n stakeKeys = cardanocliJs.stakeAddressKeyGen(account);  \n stakeAddr = cardanocliJs.stakeAddressBuild(account);  \n paymentAddr = cardanocliJs.addressBuild(account,{  \n \"paymentVkey\": paymentKeys.vkey,  \n \"stakeVkey\": stakeKeys.vkey  \n });  \n return cardanocliJs.wallet(account);  \n }  \n catch(err){  \n console.log(err)  \n }  \n  \n};  \n  \nconst createPool = (name) => {  \n cardanocliJs.nodeKeyGenKES(name);  \n cardanocliJs.nodeKeyGen(name);  \n cardanocliJs.nodeIssueOpCert(name);  \n cardanocliJs.nodeKeyGenVRF(name);  \n return cardanocliJs.pool(name);  \n};  \n  \nconst wallet = createWallet(\"Ada\");  \nconst pool = createPool(\"Berry\");  \n  \nconsole.log(wallet.paymentAddr);  \nconsole.log(pool.vrf.vkey);`\n\nVisit [cardanocli-js](https://github.com/miguelaeh/cardanocli-js/) to see the complete API documentation.",
  "images": [],
  "extraction_metadata": {
    "batch_number": 4,
    "extraction_timestamp": "2025-09-19T14:04:34.999822",
    "extraction_time": 3.8223392963409424,
    "source": "tavily_api_raw"
  }
}