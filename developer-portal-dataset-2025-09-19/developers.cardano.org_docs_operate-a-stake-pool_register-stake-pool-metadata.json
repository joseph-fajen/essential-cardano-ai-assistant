{
  "url": "https://developers.cardano.org/docs/operate-a-stake-pool/register-stake-pool-metadata",
  "content": "![Cardano Logo](/img/cardano-black.svg)\n![Cardano Logo](/img/cardano-white.svg)\n\n# Register a Stake Pool with Metadata\n\nMake sure you have access to:\n\n| File | Content |\n| --- | --- |\n| `payment.vkey` | payment verification key |\n| `payment.skey` | payment signing key |\n| `stake.vkey` | staking verification key |\n| `stake.skey` | staking signing key |\n| `stake.addr` | registered stake address |\n| `payment.addr` | funded address linked to `stake` |\n| `cold.vkey` | cold verification key |\n| `cold.skey` | cold signing key |\n| `cold.counter` | issue counter |\n| `node.cert` | operational certificate |\n| `kes.vkey` | KES verification key |\n| `kes.skey` | KES signing key |\n| `vrf.vkey` | VRF verification key |\n| `vrf.skey` | VRF signing key |\n\n`payment.vkey`\n`payment.skey`\n`stake.vkey`\n`stake.skey`\n`stake.addr`\n`payment.addr`\n`stake`\n`cold.vkey`\n`cold.skey`\n`cold.counter`\n`node.cert`\n`kes.vkey`\n`kes.skey`\n`vrf.vkey`\n`vrf.skey`\n\nRegistering your stake pool requires:\n\n**WARNING:** Generating the **stake pool registration certificate** and the **delegation certificate** requires the **cold keys**. So, when doing this on Mainnet you may want to generate these certificates in your local machine taking the proper security measures to avoid exposing your cold keys to the internet.\n\n#### Create a JSON file with your pool's metadata[​](#create-a-json-file-with-your-pools-metadata \"Direct link to Create a JSON file with your pool's metadata\")\n\n`{  \n \"name\": \"TestPool\",  \n \"description\": \"The pool that tests all the pools\",  \n \"ticker\": \"TEST\",  \n \"homepage\": \"https://teststakepool.com\"  \n}`\n\nStore the file on your web server. For example [https://teststakepool.com/poolMetadata.json](https://git.io/JJWdJ). You must store your pool metadata on reliable server, in case if metadata files will not be available then your pool might disappear from wallets and potential delegators will not be able to find it.\n\n#### Get the hash of your metadata file uploaded to server:[​](#get-the-hash-of-your-metadata-file-uploaded-to-server \"Direct link to Get the hash of your metadata file uploaded to server:\")\n\nThese command will return hash value of json file, what we just uploaded to our web server. Keep in mind that you need to put your own address instead `https://teststakepool.com/poolMetadata.json`\n\n`https://teststakepool.com/poolMetadata.json`\n`cardano-cli stake-pool metadata-hash --pool-metadata-file <(curl -s -L -k https://teststakepool.com/poolMetadata.json)  \n  \n>6bf124f217d0e5a0a8adb1dbd8540e1334280d49ab861127868339f43b3948af`\n\n#### Generate Stake pool registration certificate[​](#generate-stake-pool-registration-certificate \"Direct link to Generate Stake pool registration certificate\")\n\n`cardano-cli stake-pool registration-certificate \\  \n --cold-verification-key-file cold.vkey \\  \n --vrf-verification-key-file vrf.vkey \\  \n --pool-pledge <AMOUNT TO PLEDGE IN LOVELACE> \\  \n --pool-cost <POOL COST PER EPOCH IN LOVELACE> \\  \n --pool-margin <POOL COST PER EPOCH IN PERCENTAGE> \\  \n --pool-reward-account-verification-key-file stake.vkey \\  \n --pool-owner-stake-verification-key-file stake.vkey \\  \n --mainnet \\  \n --pool-relay-ipv4 <RELAY NODE PUBLIC IP> \\  \n --pool-relay-port <RELAY NODE PORT> \\  \n --metadata-url https://git.io/JJWdJ \\  \n --metadata-hash <POOL METADATA HASH> \\  \n --out-file pool-registration.cert`\n\n| Parameter | Explanation |\n| --- | --- |\n| cold-verification-key-file | verification *cold* key |\n| vrf-verification-key-file | verification *VRF* key |\n| pool-pledge | pledge lovelace |\n| pool-cost | operational costs per epoch lovelace |\n| pool-margin | operator margin |\n| pool-reward-account-verification-key-file | verification staking key for the rewards |\n| pool-owner-staking-verification-key-file | verification staking keys for the pool owners |\n| pool-relay-ipv4 | relay node ip address |\n| pool-relay-port | port |\n| metadata-url | url of your json file |\n| metadata-hash | the hash of pools json metadata file |\n| out-file | output file to write the certificate to |\n\n**You can use a different key for the rewards, and can provide more than one owner key if there were multiple owners who share the pledge.**\n\nThe **pool-registration.cert** file should look like this:\n\n`type: CertificateShelley  \ndescription: Stake Pool Registration Certificate  \ncborHex:  \n18b58a03582062d632e7ee8a83769bc108e3e42a674d8cb242d7375fc2d97db9b4dd6eded6fd5820  \n48aa7b2c8deb8f6d2318e3bf3df885e22d5d63788153e7f4040c33ecae15d3e61b0000005d21dba0  \n001b000000012a05f200d81e820001820058203a4e813b6340dc790f772b3d433ce1c371d5c5f5de  \n46f1a68bdf8113f50e779d8158203a4e813b6340dc790f772b3d433ce1c371d5c5f5de46f1a68bdf  \n8113f50e779d80f6`\n\n#### Generate delegation certificate pledge[​](#generate-delegation-certificate-pledge \"Direct link to Generate delegation certificate pledge\")\n\nTo honor your pledge, create a *delegation certificate*:\n\n`cardano-cli stake-address delegation-certificate \\  \n --stake-verification-key-file stake.vkey \\  \n --cold-verification-key-file cold.vkey \\  \n --out-file delegation.cert`\n\nThis creates a delegation certificate which delegates funds from all stake addresses associated with key `stake.vkey` to the pool belonging to cold key `cold.vkey`. If there are many staking keys as pool owners in the first step, we need delegation certificates for all of them.\n\n`stake.vkey`\n`cold.vkey`\n\n#### Submit the pool certificate and delegation certificate to the blockchain[​](#submit-the-pool-certificate-and-delegation-certificate-to-the-blockchain \"Direct link to Submit the pool certificate and delegation certificate to the blockchain\")\n\nTo submit the `pool registration certificate` and the `delegation certificates` to the blockchain by including them in one or more transactions. We can use one transaction for multiple certificates, the certificates will be applied in order.\n\n`pool registration certificate`\n`delegation certificates`\n\n#### Draft the transaction[​](#draft-the-transaction \"Direct link to Draft the transaction\")\n\n`cardano-cli conway transaction build-raw \\  \n --tx-in <TxHash>#<TxIx> \\  \n --tx-out $(cat payment.addr)+0 \\  \n --invalid-hereafter 0 \\  \n --fee 0 \\  \n --out-file tx.draft \\  \n --certificate-file pool-registration.cert \\  \n --certificate-file delegation.cert`\n\n#### Calculate the fees[​](#calculate-the-fees \"Direct link to Calculate the fees\")\n\n`cardano-cli conway transaction calculate-min-fee \\  \n --tx-body-file tx.draft \\  \n --tx-in-count 1 \\  \n --tx-out-count 1 \\  \n --witness-count 3 \\  \n --byron-witness-count 0 \\  \n --mainnet \\  \n --protocol-params-file protocol.json`\n\nFor example:\n\n`> 184685`\n\nRegistering a stake pool requires a deposit. This amount is specified in `protocol.json`. For example, for Shelley Mainnet we have:\n\n`protocol.json`\n`\"poolDeposit\": 500000000`\n\n#### Calculate the change for --tx-out[​](#calculate-the-change-for---tx-out \"Direct link to Calculate the change for --tx-out\")\n\nAll amounts in Lovelace\n\n`expr <UTxO BALANCE> - <poolDeposit> - <TRANSACTION FEE>`\n\n#### Build the transaction:[​](#build-the-transaction \"Direct link to Build the transaction:\")\n\n`cardano-cli conway transaction build-raw \\  \n --tx-in <TxHash>#<TxIx> \\  \n --tx-out $(cat payment.addr)+<CHANGE IN LOVELACE> \\  \n --invalid-hereafter <TTL> \\  \n --fee <TRANSACTION FEE> \\  \n --out-file tx.raw \\  \n --certificate-file pool-registration.cert \\  \n --certificate-file delegation.cert`\n\n#### Sign the transaction:[​](#sign-the-transaction \"Direct link to Sign the transaction:\")\n\n`cardano-cli conway transaction sign \\  \n --tx-body-file tx.raw \\  \n --signing-key-file payment.skey \\  \n --signing-key-file stake.skey \\  \n --signing-key-file cold.skey \\  \n --mainnet \\  \n --out-file tx.signed`\n\n#### Submit the transaction:[​](#submit-the-transaction \"Direct link to Submit the transaction:\")\n\n`cardano-cli conway transaction submit \\  \n --tx-file tx.signed \\  \n --mainnet`\n\n#### Verify that your stake pool registration was successful.[​](#verify-that-your-stake-pool-registration-was-successful \"Direct link to Verify that your stake pool registration was successful.\")\n\nGet Pool ID\n\n`cardano-cli stake-pool id --cold-verification-key-file cold.vkey --output-format \"hex\"`\n\nCheck for the presence of your poolID in the network ledger state, with:\n\n`cardano-cli query ledger-state --mainnet | grep publicKey | grep <poolId>`",
  "images": [],
  "extraction_metadata": {
    "batch_number": 9,
    "extraction_timestamp": "2025-09-19T14:05:00.496633",
    "extraction_time": 2.430634021759033,
    "source": "tavily_api_raw"
  }
}