{
  "url": "https://developers.cardano.org/docs/get-started/cli-operations/basic-operations/treasury-donation",
  "content": "![Cardano Logo](/img/cardano-black.svg)\n![Cardano Logo](/img/cardano-white.svg)\n\n# Treasury donation\n\nIn the Conway era, you can make donations to the Treasury through a transaction. To construct this transaction, you can use either `build` or `build-raw`. The key requirement for this type of transaction is that it must be submitted within the same epoch in which it is created. This is because the transaction body includes the field `currentTreasuryValue`, which will change in the next epoch, causing the transaction to fail at submission time.\n\n`build`\n`build-raw`\n`currentTreasuryValue`\n\nThe examples on this tutorial are created on a local clusters that hardfork to Conway on epoch 0.\n\nThe treasury donation is created on epoch 0 so that when querying the treasury value on epoch 1, the only lovelace in the treasury are those comming from the donation.\n\n## Using build-raw[​](#using-build-raw \"Direct link to Using build-raw\")\n\n### Query the protocol-parameters:[​](#query-the-protocol-parameters \"Direct link to Query the protocol-parameters:\")\n\n`cardano-cli conway query protocol-parameters --out-file pparams.json`\n\n### Query the utxos of your address:[​](#query-the-utxos-of-your-address \"Direct link to Query the utxos of your address:\")\n\n`cardano-cli conway query utxo --address $(< example/utxo-keys/payment1.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \n6b3cac1a1b63498452ef36ff114ad4f51e5be00c6fbf7ff7b8dbf380483642aa 0 589993592922 lovelace + TxOutDatumNone`\n\n### Query the current treasury value:[​](#query-the-current-treasury-value \"Direct link to Query the current treasury value:\")\n\n`cardano-cli conway query treasury  \n0`\n\n### Build the transaction:[​](#build-the-transaction \"Direct link to Build the transaction:\")\n\nWhen building the transaction we need to pass the current value of the treasury. Also, we use a fee that is close to the minimum possible fee, We will calculate the acrtual fee in the next step.\n\n`cardano-cli conway transaction build-raw \\  \n--tx-in 6b3cac1a1b63498452ef36ff114ad4f51e5be00c6fbf7ff7b8dbf380483642aa#0 \\  \n--current-treasury-value 0 \\  \n--treasury-donation 987654321 \\  \n--tx-out $(< example/utxo-keys/payment1.addr)+589993592922 \\  \n--fee 160000 \\  \n--protocol-params-file pparams.json \\  \n--out-file example/transactions/treasury.tx.raw`\n\n### Calculate the fee:[​](#calculate-the-fee \"Direct link to Calculate the fee:\")\n\n`cardano-cli conway transaction calculate-min-fee \\  \n--tx-body-file example/transactions/treasury.tx.raw \\  \n--protocol-params-file pparams.json \\  \n--witness-count 1 \\  \n--output-json  \n{  \n \"fee\": 166117  \n}`\n\n### Calculate the change to balance the transaction:[​](#calculate-the-change-to-balance-the-transaction \"Direct link to Calculate the change to balance the transaction:\")\n\n`echo $((589993592922 - 166117 - 987654321))`\n\n### Re-build the transaction with the updated values:[​](#re-build-the-transaction-with-the-updated-values \"Direct link to Re-build the transaction with the updated values:\")\n\n`cardano-cli conway transaction build-raw \\  \n--tx-in 6b3cac1a1b63498452ef36ff114ad4f51e5be00c6fbf7ff7b8dbf380483642aa#0 \\  \n--current-treasury-value 0 \\  \n--treasury-donation 987654321 \\  \n--tx-out $(< example/utxo-keys/payment1.addr)+589005772484 \\  \n--fee 166117 \\  \n--protocol-params-file pparams.json \\  \n--out-file example/transactions/treasury.tx.raw`\n`cardano-cli conway transaction sign \\  \n--tx-file treasury.tx.raw \\  \n--signing-key-file payment.skey \\  \n--out-file treasury.tx.signed`\n`cardano-cli conway transaction submit \\  \n--tx-file treasury.tx.signed`\n\nAt the epoch transition following our transaction, the treasury will be updated.\n\n`cardano-cli conway query treasury   \n987654321`\n\n## Using build[​](#using-build \"Direct link to Using build\")\n\n### Build the transaction:[​](#build-the-transaction-1 \"Direct link to Build the transaction:\")\n\nThe `build` command automatically queries the `currentTreasuryValue` so there is no need to pass it in a flag. As usual. `--change-address` helps us to automatically balance the transaction.\n\n`build`\n`currentTreasuryValue`\n`--change-address`\n`cardano-cli conway transaction build \\  \n--tx-in $(cardano-cli query utxo --address $(< payment.addr) --output-json | jq -r 'keys[0]') \\  \n--treasury-donation 987654321 \\  \n--change-address $(< payment.addr) \\  \n--out-file treasury.tx.raw`\n\n### Sign the transaction:[​](#sign-the-transaction \"Direct link to Sign the transaction:\")\n\n`cardano-cli conway transaction sign \\  \n--tx-file treasury.tx.raw \\  \n--signing-key-file payment.skey \\  \n--out-file treasury.tx.signed`\n\n### Submit the transaction:[​](#submit-the-transaction \"Direct link to Submit the transaction:\")\n\n`cardano-cli conway transaction submit \\  \n--tx-file treasury.tx.signed`\n\nAt the epoch transition following our transaction, the treasury will be updated.\n\n`cardano-cli conway query treasury   \n987654321`\n\n## Transaction body details:[​](#transaction-body-details \"Direct link to Transaction body details:\")\n\nThe transaction body carries the fields `\"currentTreasuryValue\":` and `\"treasuryDonation\":`, these are `null` in other transactions, this time the fields have a value.\n\n`\"currentTreasuryValue\":`\n`\"treasuryDonation\":`\n`null`\n`cardano-cli debug transaction view --tx-file example/transactions/treasury.tx.signed  \n{  \n \"auxiliary scripts\": null,  \n \"certificates\": null,  \n \"collateral inputs\": [],  \n \"currentTreasuryValue\": 0,  \n \"era\": \"Conway\",  \n \"fee\": \"170209 Lovelace\",  \n \"governance actions\": [],  \n \"inputs\": [  \n \"60026f54b66f4f60bbcdbe0e41cc5faaa0ecbef9489badca96e65c2ee13fc180#0\"  \n ],  \n \"metadata\": null,  \n \"mint\": null,  \n \"outputs\": [  \n {  \n \"address\": \"addr_test1qp36k4sz488z5he0cut7awr5m2fajm9kkqcex5p963zgpgmkksh55zaw47shfy92nyaa3usf6ly7an8gfl8ktdhhv85s6zhl4v\",  \n \"address era\": \"Shelley\",  \n \"amount\": {  \n \"lovelace\": 589005768392  \n },  \n \"network\": \"Testnet\",  \n \"payment credential key hash\": \"63ab5602a9ce2a5f2fc717eeb874da93d96cb6b031935025d44480a3\",  \n \"reference script\": null,  \n \"stake reference\": {  \n \"stake credential key hash\": \"76b42f4a0baeafa17490aa993bd8f209d7c9eecce84fcf65b6f761e9\"  \n }  \n }  \n ],  \n \"redeemers\": {},  \n \"reference inputs\": [],  \n \"required signers (payment key hashes needed for scripts)\": null,  \n \"return collateral\": null,  \n \"total collateral\": null,  \n \"treasuryDonation\": 987654321,  \n \"update proposal\": null,  \n \"validity range\": {  \n \"lower bound\": null,  \n \"upper bound\": null  \n },  \n \"voters\": {},  \n \"withdrawals\": null,  \n \"witnesses\": [  \n {  \n \"key\": \"VKey (VerKeyEd25519DSIGN \\\"3d1f194c060f6f2a056bdee943fd16eb922aad8ce2ef524a53eefeaba60e6f6f\\\")\",  \n \"signature\": \"SignedDSIGN (SigEd25519DSIGN \\\"efda7f8cf55be3ad34ae38119a141f2d1cd0808193207fb7f896c0636a0b8ad3fbea276db7ba516a25ba013837ab0e5cc396cbc615ff0821ff75a17f5a5b6d05\\\")\"  \n }  \n ]  \n}`",
  "images": [],
  "extraction_metadata": {
    "batch_number": 4,
    "extraction_timestamp": "2025-09-19T14:04:34.999822",
    "extraction_time": 3.8223392963409424,
    "source": "tavily_api_raw"
  }
}