{
  "url": "https://developers.cardano.org/docs/get-started/cli-operations/basic-operations/withdraw-rewards",
  "content": "![Cardano Logo](/img/cardano-black.svg)\n![Cardano Logo](/img/cardano-white.svg)\n\n# Withdraw rewards\n\n## Querying the stake address balance[​](#querying-the-stake-address-balance \"Direct link to Querying the stake address balance\")\n\nFirst, check if you have some rewards to withdraw:\n\n`cardano-cli conway query stake-address-info --address $(< stake.addr)  \n[  \n {  \n \"address\": \"stake_test1ur453z5nxrgvvu9wfyuxut8ss0mrvca4n8ly44tcu8camlqaz98mh\",  \n \"delegationDeposit\": 2000000,  \n \"rewardAccountBalance\": 10534638802,  \n \"stakeDelegation\": \"pool17xgtj7ayvsaju4clums0mfusla4pmtfm6t4fj6guqqlsvne2mwm\",  \n \"voteDelegation\": \"scriptHash-59aa3f091b3bcef254abfb89aea64973a61b78fdb2ac44839c7ccba8\"  \n }  \n]`\n\nNice! There are some rewards, let's store the `rewardAccountBalance` in a variable for future use:\n\n`rewardAccountBalance`\n`rewards=\"$(cardano-cli conway query stake-address-info --address $(< stake1.addr) | jq .[].rewardAccountBalance)\"`\n\n## Building the transaction[​](#building-the-transaction \"Direct link to Building the transaction\")\n\nTo withdraw rewards from the rewards account, you must withdraw its entire balance; partial withdrawals are not allowed. Use the `--withdrawal` flag followed by the stake address and its balance using the syntax: `stakeAddress+lovelace`.\n\n`--withdrawal`\n`stakeAddress+lovelace`\n\nBy default, the `build` command considers the transaction to only require one witness. However, this type of transaction needs to be signed by `payment.skey` to pay for the transaction fees, and also by `stake.skey` to prove that we control that stake address. Therefore, we inform the `build` command that the transaction will carry two signatures using the `--witness-override 2` flag. This has a slight impact on the fee:\n\n`build`\n`payment.skey`\n`stake.skey`\n`build`\n`--witness-override 2`\n`cardano-cli conway transaction build \\  \n --tx-in $(cardano-cli query utxo --address $(< payment.addr) --output-json | jq -r 'keys[0]') \\  \n --withdrawal stake_test1ur453z5nxrgvvu9wfyuxut8ss0mrvca4n8ly44tcu8camlqaz98mh+10534638802 \\  \n --change-address $(< payment1.addr) \\  \n --witness-override 2 \\  \n --out-file tx.raw  \n  \n> Estimated transaction fee: Coin 180593`\n\nor using `<` and the `$rewards` variable from above:\n\n`<`\n`$rewards`\n`cardano-cli conway transaction build \\  \n --tx-in $(cardano-cli query utxo --address $(< payment.addr) --output-json | jq -r 'keys[0]') \\  \n --withdrawal \"$(< stake.addr)+$rewards\" \\  \n --change-address $(< payment.addr) \\  \n --witness-override 2 \\  \n --out-file tx.raw  \n  \n> Estimated transaction fee: Coin 180593`\n\n## Signing the transaction[​](#signing-the-transaction \"Direct link to Signing the transaction\")\n\nAs before, sign the transaction with the `payment.skey`:\n\n`payment.skey`\n`cardano-cli conway transaction sign \\  \n--tx-body-file tx.raw \\  \n--signing-key-file payment.skey \\  \n--signing-key-file stake.skey \\  \n--out-file tx.signed`\n\nIf you inspect the transaction, you'll notice that the 'withdrawals' field contains reward withdrawal details:\n\n`cardano-cli debug transaction view --tx-file tx.signed`\n`{  \n \"auxiliary scripts\": null,  \n \"certificates\": null,  \n \"collateral inputs\": [],  \n \"era\": \"Babbage\",  \n \"fee\": \"180593 Lovelace\",  \n \"inputs\": [  \n \"5b8e81604aa60f82337986c0db4e0078282309ca054aa2690315451ec47ce1eb#0\"  \n ],  \n \"metadata\": null,  \n \"mint\": null,  \n \"outputs\": [  \n {  \n \"address\": \"addr_test1qrpw2fzut0s7mexgl05lmjdajr00lvlvlufg3qamc0d3mmhtfz9fxvxscec2ujfcdck0pqlkxe3mtx07ft2h3c03mh7q72p248\",  \n \"address era\": \"Shelley\",  \n \"amount\": {  \n \"lovelace\": 680164451802  \n },  \n \"network\": \"Testnet\",  \n \"payment credential key hash\": \"c2e5245c5be1ede4c8fbe9fdc9bd90deffb3ecff128883bbc3db1dee\",  \n \"reference script\": null,  \n \"stake reference\": {  \n \"stake credential key hash\": \"eb488a9330d0c670ae49386e2cf083f63663b599fe4ad578e1f1ddfc\"  \n }  \n }  \n ],  \n \"redeemers\": {},  \n \"reference inputs\": [],  \n \"required signers (payment key hashes needed for scripts)\": null,  \n \"return collateral\": null,  \n \"total collateral\": null,  \n \"update proposal\": null,  \n \"validity range\": {  \n \"lower bound\": null,  \n \"upper bound\": null  \n },  \n \"withdrawals\": [  \n {  \n \"address\": \"stake_test1ur453z5nxrgvvu9wfyuxut8ss0mrvca4n8ly44tcu8camlqaz98mh\",  \n \"amount\": \"10534638802 Lovelace\",  \n \"network\": \"Testnet\",  \n \"stake credential key hash\": \"eb488a9330d0c670ae49386e2cf083f63663b599fe4ad578e1f1ddfc\"  \n }  \n ],  \n \"witnesses\": [  \n {  \n \"key\": \"VKey (VerKeyEd25519DSIGN \\\"842402e9a35b8818d35f556ba59df2929e3bee72c8e9bfdaa1894faed0a3b2d5\\\")\",  \n \"signature\": \"SignedDSIGN (SigEd25519DSIGN \\\"31c84cc7e0b770f76acb3682c7d2e5b13c00405a0fd1fbaf3ff545be42458fb3e89c3da20162ea262a73d35f04e18257c175d8e0849d51922b8185c11920800b\\\")\"  \n },  \n {  \n \"key\": \"VKey (VerKeyEd25519DSIGN \\\"8d2128537a643b7327fb07ef01fd8cd2f4911e0b3d096a4575d4cd4d73471896\\\")\",  \n \"signature\": \"SignedDSIGN (SigEd25519DSIGN \\\"06fe930ce8d2f63fd62ab1354b2a85283fe4e6fdfc29ef605644c3f92505cd25165c2e40d4b0139240c06c86e06e835eee0d57a6783142ef5138cacad27d4d08\\\")\"  \n }  \n ]  \n}`\n\n## Submitting the transaction[​](#submitting-the-transaction \"Direct link to Submitting the transaction\")\n\n`cardano-cli conway transaction submit \\  \n --tx-file tx.signed   \n  \nTransaction successfully submitted.`\n\nIf you query the stake address details again, you'll notice that it has been emptied, and the funds were sent to the payment address.\n\n`cardano-cli conway query stake-address-info --address $(< stake1.addr)  \n[  \n {  \n \"address\": \"stake_test1ur453z5nxrgvvu9wfyuxut8ss0mrvca4n8ly44tcu8camlqaz98mh\",  \n \"delegationDeposit\": 2000000,  \n \"rewardAccountBalance\": 0,  \n \"stakeDelegation\": \"pool17xgtj7ayvsaju4clums0mfusla4pmtfm6t4fj6guqqlsvne2mwm\",  \n \"voteDelegation\": \"scriptHash-59aa3f091b3bcef254abfb89aea64973a61b78fdb2ac44839c7ccba8\"  \n }  \n]`",
  "images": [],
  "extraction_metadata": {
    "batch_number": 5,
    "extraction_timestamp": "2025-09-19T14:04:40.000976",
    "extraction_time": 1.9930140972137451,
    "source": "tavily_api_raw"
  }
}