{
  "url": "https://developers.cardano.org/docs/smart-contracts/smart-contract-languages/plutarch/advanced-data-structures/linked-list",
  "content": "![Cardano Logo](/img/cardano-black.svg)\n![Cardano Logo](/img/cardano-white.svg)\n\n# Linked List\n\n## Introduction[​](#introduction \"Direct link to Introduction\")\n\nLinked list structures leverage the EUTXO model to enhancing scalability and throughput significantly. By linking multiple UTXOs together through a series of minting policies and validators, it can improve the user experience interacting with smart contract concurrently.\n\nThe github repository introducing these data structures can be found [here](https://github.com/Anastasia-Labs/plutarch-linked-list).\n\n## Documentation[​](#documentation \"Direct link to Documentation\")\n\n### Linked List[​](#linked-list \"Direct link to Linked List\")\n\nThe Plutarch Linked List is an on-chain, sorted linked list solution designed for blockchain environments, specifically utilizing NFTs (Non-Fungible Tokens) and datums. It provides a structured and efficient way to store and manipulate a list of key/value pairs on-chain.\n\n![linked-list](/assets/images/linked-list-1-71c67965afd9b03cf7d6954746efb616.png)\n\n![linked-list](/assets/images/linked-list-1-71c67965afd9b03cf7d6954746efb616.png)\n\n#### Entry Structure[​](#entry-structure \"Direct link to Entry Structure\")\n\nEach entry in the list comprises:\n\n#### EntryDatum Definition[​](#entrydatum-definition \"Direct link to EntryDatum Definition\")\n\n`data EntryDatum = EntryDatum {  \n key :: BuiltinByteString,  \n value :: Maybe SomeValue,  \n nft :: NFT,  \n next :: Maybe NFT  \n}`\n\n#### Operations[​](#operations \"Direct link to Operations\")\n\n##### Inserting an Entry[​](#inserting-an-entry \"Direct link to Inserting an Entry\")\n\n![insert entry](/assets/images/linked-list-2-9027d729be0bab4c3c4b9b4e313d3e29.png)\n\n![insert entry](/assets/images/linked-list-2-9027d729be0bab4c3c4b9b4e313d3e29.png)\n\nInsertion involves:\n\nValidation Rules\n\n##### Removing an Entry[​](#removing-an-entry \"Direct link to Removing an Entry\")\n\n![remove entry](/assets/images/linked-list-3-8ea28d25a5961ac70fb53d476ec61166.png)\n\n![remove entry](/assets/images/linked-list-3-8ea28d25a5961ac70fb53d476ec61166.png)\n\nTo remove an entry:\n\n#### Utilizing NFTs as Pointers[​](#utilizing-nfts-as-pointers \"Direct link to Utilizing NFTs as Pointers\")\n\nNFTs serve as robust and unique pointers within the list. Their uniqueness is ensured by a specific minting policy related to the list's head NFT.\n\n#### Key Considerations[​](#key-considerations \"Direct link to Key Considerations\")\n\n#### Advanced Features[​](#advanced-features \"Direct link to Advanced Features\")\n\n### Plutarch Linked List implementation[​](#plutarch-linked-list-implementation \"Direct link to Plutarch Linked List implementation\")\n\nThe Plutarch Linked List implementation provides several functions to create and manipulate Linked List. Below is a brief overview of each function:\n\n`pInit`\n`pDeinit`\n`pInsert`\n`pRemove`",
  "images": [],
  "extraction_metadata": {
    "batch_number": 12,
    "extraction_timestamp": "2025-09-19T14:05:17.156321",
    "extraction_time": 1.6163160800933838,
    "source": "tavily_api_raw"
  }
}