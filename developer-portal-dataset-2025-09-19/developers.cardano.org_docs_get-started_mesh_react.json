{
  "url": "https://developers.cardano.org/docs/get-started/mesh/react",
  "content": "![Cardano Logo](/img/cardano-black.svg)\n![Cardano Logo](/img/cardano-white.svg)\n\n# React Web App\n\nMesh provide a collection of useful UI components, so you can easily include web3 functionality and convenient utilities for your application.\n\nTo start, install `mesh-react`:\n\n`mesh-react`\n`npm install @meshsdk/react`\n\n## Mesh Provider[​](#mesh-provider \"Direct link to Mesh Provider\")\n\nNext, let's add `MeshProvider` to the root of the application. [React Context](https://reactjs.org/docs/context.html) allows apps to share data across the app, and MeshProvider allows your app to subscribe to context changes.\n\n`MeshProvider`\n`import { MeshProvider } from \"@meshsdk/react\";  \n  \nfunction MyApp({ Component, pageProps }: AppProps) {  \n return (  \n <MeshProvider>  \n <Component {...pageProps} />  \n </MeshProvider>  \n );  \n};`\n\n## UI Components[​](#ui-components \"Direct link to UI Components\")\n\nIn order for dApps to communicate with the user's wallet, we need a way to connect to their wallet.\n\nAdd this CardanoWallet to allow the user to select a wallet to connect to your dApp. After the wallet is connected, see Browser Wallet for a list of CIP-30 APIs.\n\n`import { CardanoWallet } from '@meshsdk/react';  \n  \nexport default function Page() {  \n return (  \n <>  \n <CardanoWallet />  \n </>  \n );  \n}`\n\nBrowse all [UI Components](https://meshjs.dev/react/ui-components) provided by Mesh to start building web3 applications, interact with your contracts using your wallets.\n\n## Wallet Hooks[​](#wallet-hooks \"Direct link to Wallet Hooks\")\n\nIn a React application, Hooks allows you to extract and reuse stateful logic and variables without changing your component hierarchy. This makes it easy to reuse the same Hook among many components. You can try each of these hooks on [Mesh Playground](https://meshjs.dev/react/wallet-hooks).\n\n### useWalletList[​](#usewalletlist \"Direct link to useWalletList\")\n\nReturns a list of wallets installed on user's device.\n\n`import { useWalletList } from '@meshsdk/react';  \n  \nexport default function Page() {  \n const wallets = useWalletList();  \n  \n return (  \n <>  \n {wallets.map((wallet, i) => {  \n return (  \n <p key={i}>  \n <img src={wallet.icon} style={{ width: '48px' }} />  \n <b>{wallet.name}</b>  \n </p>  \n );  \n })}  \n </>  \n );  \n}`\n\n### useAddress[​](#useaddress \"Direct link to useAddress\")\n\nReturn address of connected wallet.\n\n`import { useAddress } from '@meshsdk/react';  \n  \nexport default function Page() {  \n const address = useAddress();  \n  \n return (  \n <div><p>Your wallet address is: <code>{address}</code></p></div>  \n );  \n}`\n\n### useAssets[​](#useassets \"Direct link to useAssets\")\n\nReturn a list of assets in connected wallet from all UTXOs.\n\n`import { useAssets } from '@meshsdk/react';  \n  \nexport default function Page() {  \n const assets = useAssets();  \n  \n return (  \n <ol>  \n {assets &&  \n assets.slice(0, 10).map((asset, i) => {  \n return (  \n <li key={i}>  \n <b>{asset.assetName}</b> (x{asset.quantity})  \n </li>  \n );  \n })}  \n </ol>  \n );  \n}`\n\n### useLovelace[​](#uselovelace \"Direct link to useLovelace\")\n\nReturn amount of lovelace in wallet.\n\n`import { useLovelace } from '@meshsdk/react';  \n  \nexport default function Page() {  \n const lovelace = useLovelace();  \n  \n return (  \n <div>  \n <p>You have <b>₳ {parseInt(lovelace) / 1000000}</b>.</p>  \n </div>  \n );  \n}`\n\n### useNetwork[​](#usenetwork \"Direct link to useNetwork\")\n\nReturn the network of connected wallet.\n\n`import { useNetwork } from '@meshsdk/react';  \n  \nexport default function Page() {  \n const network = useNetwork();  \n  \n return (  \n <div>  \n <p>Connected network: <b>{network}</b>.</p>  \n </div>  \n );  \n}`\n\n### useWallet[​](#usewallet \"Direct link to useWallet\")\n\nProvide information on the current wallet's state, and functions for connecting and disconnecting user wallet.\n\n`import { useWallet } from '@meshsdk/react';  \n  \nexport default function Page() {  \n const { wallet, connected, name, connecting, connect, disconnect, error } = useWallet();  \n  \n return (  \n <div>  \n <p>  \n <b>Connected?: </b> {connected ? 'Is connected' : 'Not connected'}  \n </p>  \n <p>  \n <b>Connecting wallet?: </b> {connecting ? 'Connecting...' : 'No'}  \n </p>  \n <p>  \n <b>Name of connected wallet: </b>  \n {name}  \n </p>  \n <button onClick={() => disconnect()}>Disconnect Wallet</button>  \n </div>  \n );  \n}`\n\nCheck out the [Mesh Playground](https://meshjs.dev/react/wallet-hooks) for live demo and full explanation.",
  "images": [],
  "extraction_metadata": {
    "batch_number": 6,
    "extraction_timestamp": "2025-09-19T14:04:44.452431",
    "extraction_time": 1.4428989887237549,
    "source": "tavily_api_raw"
  }
}