{
  "url": "https://developers.cardano.org/docs/get-started/haskell/onboarding",
  "content": "![Cardano Logo](/img/cardano-black.svg)\n![Cardano Logo](/img/cardano-white.svg)\n\n# Onboarding Guide for Haskell Learners\n\n## Getting Started with Haskell for Cardano Development[​](#getting-started-with-haskell-for-cardano-development \"Direct link to Getting Started with Haskell for Cardano Development\")\n\nHaskell is a statically-typed, purely functional programming language known for its strong type system and reliability. It’s the foundation of Cardano’s smart contract platform **Plutus**, which is implemented as a Haskell library. Because of Haskell’s emphasis on correctness and deterministic behavior, Cardano’s core components (and Plutus smart contracts) are written in or based on Haskell [developers.cardano.org](https://developers.cardano.org/docs/smart-contracts/plutus/). In short, learning Haskell is the first step to writing secure, high-assurance Cardano applications.\n\n### Onboarding Journey: From Haskell Novice to Smart Contract Developer[​](#onboarding-journey-from-haskell-novice-to-smart-contract-developer \"Direct link to Onboarding Journey: From Haskell Novice to Smart Contract Developer\")\n\n`Maybe`\n\n## Learning Resources[​](#learning-resources \"Direct link to Learning Resources\")\n\n### Books[​](#books \"Direct link to Books\")\n\n### Online Tutorials & Guides[​](#online-tutorials--guides \"Direct link to Online Tutorials & Guides\")\n\n### Video Courses[​](#video-courses \"Direct link to Video Courses\")\n\n### Interactive Platforms[​](#interactive-platforms \"Direct link to Interactive Platforms\")\n\n## Cardano-Specific Haskell: Plutus and Training[​](#cardano-specific-haskell-plutus-and-training \"Direct link to Cardano-Specific Haskell: Plutus and Training\")\n\n**Plutus (Haskell on Cardano):** Plutus is the native smart contract language for Cardano – essentially a Haskell library for on-chain scripts. The Cardano docs explain that *“Plutus allows all programming to be done from a single Haskell library”*, enabling secure, deterministic smart contracts [developers.cardano.org](https://developers.cardano.org/docs/smart-contracts/plinth). In practice, you write Haskell code (often called Plinth) that compiles to Plutus Core, the Cardano on-chain VM language. Learning Plutus means learning how to express transaction validators, minting policies, and off-chain infrastructure in Haskell.\n\n**Plutus Pioneer Program:** IOHK’s Plutus Pioneer Program is the flagship training course for Cardano smart contract development. It is an open, intensive curriculum (with weekly videos and exercises) that *“recruits and trains software developers in Plutus, the native smart contract language for the Cardano ecosystem”* [github.com](https://github.com/input-output-hk/plutus-pioneer-program). Completed at your own pace or in cohort cohorts, the Pioneer Program teaches both Haskell and Plutus best practices. (Past lecture videos and course materials are freely available online.)\n\n**IOG Academy Courses:** The Input Output Group (IOHK) also provides foundational courses. In addition to the Plutus Pioneer, the IOG Education Team created a **Haskell course** for beginners, as well as follow-up tutorials on Plinth and DApp building [developers.cardano.org](https://developers.cardano.org/docs/smart-contracts/plinth/) or [github.com](https://github.com/input-output-hk/haskell-course). The Haskell course (featuring Jupyter notebooks and video) is specifically designed for programmers new to Haskell. Once ready for Plutus, the Developer Portal and IOHK blog offer guides like “Writing a basic Plutus application” and example projects.\n\n**Other Cardano Resources:** Don’t forget general Cardano dev docs and communities. For example, the Cardano Developer Portal has step-by-step guides (“Plutus resources”, smart contract tutorials) and the Marlowe playground for financial contracts. EMURGO and Community sites (e.g. Essential Cardano) also publish Haskell/Plutus tutorials and newsletters. Engaging with the Cardano Forum and Discord can point you to meetups, hackathons, and mentoring.\n\n### Suggested Learning Path[​](#suggested-learning-path \"Direct link to Suggested Learning Path\")\n\n| **Stage & Focus** | **Recommended Resources** |\n| --- | --- |\n| **Haskell Fundamentals** (Beginner) – Learn syntax, types, basic FP concepts. | Books: *Learn You a Haskell for Great Good*[developers.cardano.org](https://developers.cardano.org/docs/smart-contracts/plutus/), *Haskell Programming from First Principles*[github.com](https://github.com/sassela/haskell-learning). Courses: IOHK’s Haskell Course[github.com](https://github.com/input-output-hk/haskell-course), Haskell MOOC[haskell.mooc.fi](https://haskell.mooc.fi). Practice: Try Haskell[tryhaskell.org](https://tryhaskell.org), simple exercises (Project Euler). |\n| **Advanced Haskell & FP** – Master typeclasses, monads, concurrency. | Books: *Real World Haskell*, *Thinking with Types*[github.com](https://github.com/sassela/haskell-learning). Interactive: Exercism (Haskell track). Tutorials: \"What I Wish I Knew...\"[wiki.haskell.org](https://wiki.haskell.org/index.php?title=Tutorials), and HaskellWiki guides. |\n| **Plutus & Cardano Basics** – Learn UTXO/EUTXO and smart contract patterns. | Cardano Dev Portal: Plutus tutorials[developers.cardano.org](https://developers.cardano.org/docs/smart-contracts/plutus/#get-started-with-the-plutus-pioneer-program). Video: *Haskell & Crypto Mongolia 2020*[developers.cardano.org](https://developers.cardano.org/docs/smart-contracts/plutus/). Course: Plutus Pioneer Program materials[github.com](https://github.com/input-output-hk/plutus-pioneer-program). Build: Plutus Playground examples. |\n| **Advanced Cardano Dev** – Build, test, and deploy real DApps. | Engage with community tutorials, IOG Academy advanced content, and code review. Tools: Plutus Application Backend (PAB), Cardano CLI, on-chain performance tuning. |\n\nThis structured path – from Haskell basics up through Plutus smart contracts – will guide you step by step. Along the way, use the many books, courses, and interactive platforms listed above to reinforce your learning. With patience and practice, you’ll progress into building powerful, production-ready applications on the Cardano blockchain.",
  "images": [],
  "extraction_metadata": {
    "batch_number": 5,
    "extraction_timestamp": "2025-09-19T14:04:40.000976",
    "extraction_time": 1.9930140972137451,
    "source": "tavily_api_raw"
  }
}