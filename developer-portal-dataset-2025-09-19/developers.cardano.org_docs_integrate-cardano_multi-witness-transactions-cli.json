{
  "url": "https://developers.cardano.org/docs/integrate-cardano/multi-witness-transactions-cli",
  "content": "![Cardano Logo](/img/cardano-black.svg)\n![Cardano Logo](/img/cardano-white.svg)\n\n# Multi-witness transactions\n\n## Overview[​](#overview \"Direct link to Overview\")\n\nThis guide assumes that you have completed the [Exploring Cardano Wallets](/docs/integrate-cardano/creating-wallet-faucet) guide. You will need one UTxO sitting at each of the wallets (`payment1.addr` and `payment2.addr`) to complete this guide.\n\n`payment1.addr`\n`payment2.addr`\n\nThis guide also assumes that you have `cardano-node` running in the background and connected to a [testnet network](/docs/get-started/testnets-and-devnets).\n\n`cardano-node`\n\n### Recap[​](#recap \"Direct link to Recap\")\n\nLet's recap what we did so far. Our goal in the [previous guide](/docs/integrate-cardano/creating-wallet-faucet) was to draw `1000 tADA` from the Testnet Faucet and send `250 tAda` from **payment1** to **payment2**.\n\n`1000 tADA`\n`250 tAda`\n\nMake sure we are in the correct folder.\n\n`$ pwd  \n$HOME/cardano`\n\nWe drew `1000 tAda` from the Testnet Faucet into our **payment1** wallet.\n\n`1000 tAda`\n`$ cardano-cli query utxo \\  \n--testnet-magic 1097911063 \\  \n--address $(cat keys/payment1.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \n264c0aa805652e3607c5ea2b1e8a9f3bf9c3bc8d4d938e1a9035f352083ba703 0 1000000000 lovelace`\n\nWe used `protocol-parameters` to draft our transaction and calculated the expected fee.\n\n`protocol-parameters`\n`$ cardano-cli query protocol-parameters \\  \n--testnet-magic 1097911063 \\  \n--out-file protocol.json`\n`$ cardano-cli conway transaction build-raw \\  \n--tx-in 264c0aa805652e3607c5ea2b1e8a9f3bf9c3bc8d4d938e1a9035f352083ba703#0 \\  \n--tx-out $(cat keys/payment2.addr)+0 \\  \n--tx-out $(cat keys/payment1.addr)+0 \\  \n--fee 0 \\  \n--out-file tx.draft`\n`$ cardano-cli conway transaction calculate-min-fee \\  \n--tx-body-file tx.draft \\  \n--tx-in-count 1 \\  \n--tx-out-count 2 \\  \n--witness-count 1 \\  \n--testnet-magic 1097911063 \\  \n--protocol-params-file protocol.json  \n174169 Lovelace`\n\nFrom the expected fee of `174169 Lovelace`, we were able to calculate the outputs and build our transaction.\n\n`174169 Lovelace`\n`cardano-cli conway transaction build-raw \\  \n--tx-in 264c0aa805652e3607c5ea2b1e8a9f3bf9c3bc8d4d938e1a9035f352083ba703#0 \\  \n--tx-out $(cat keys/payment2.addr)+250000000 \\  \n--tx-out $(cat keys/payment1.addr)+749825831 \\  \n--fee 174169 \\  \n--out-file tx.draft`\n\nYour fees might have been different hence you would have different amounts.\n\nWe used `payment1.skey` to sign our transaction and submitted it to the blockchain.\n\n`payment1.skey`\n`cardano-cli conway transaction sign \\  \n--tx-body-file tx.draft \\  \n--signing-key-file keys/payment1.skey \\  \n--testnet-magic 1097911063 \\  \n--out-file tx.signed  \n  \ncardano-cli conway transaction submit \\  \n--tx-file cardano/tx.signed \\  \n--testnet-magic 1097911063  \nTransaction successfully submitted.`\n\nFinally we verified the transaction by querying the **payment1** and **payment2** wallets.\n\n`$ cardano-cli query utxo \\  \n--testnet-magic 1097911063 \\  \n--address $(cat keys/payment1.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \nb73b7503576412219241731230b5b7dd3b64eed62ccfc3ce69eb86822f1db251 1 749825831 lovelace`\n`$ cardano-cli query utxo \\  \n--testnet-magic 1097911063 \\  \n--address $(cat payment2.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \nb73b7503576412219241731230b5b7dd3b64eed62ccfc3ce69eb86822f1db251 0 250000000 lovelace`\n\nWe currently have `749.825831 tAda` in our **payment1** wallet and `250 tAda` in our **payment2** wallet.\n\n`749.825831 tAda`\n`250 tAda`\n\nLet's see how we can spend it all at once!\n\n## Use case[​](#use-case \"Direct link to Use case\")\n\nThere are many possible reasons why you would want to have multiple wallets sending their ada in a single transaction. One is, you own two wallets (**payment1** and **payment2**) and you want to spend it on something that...\n\nLet's say you are at the **bike store** and you see a nice bike with a price tag of `1100 tAda` on it. You only have `999 tAda` (plus change) left.\n\n`1100 tAda`\n`999 tAda`\n\nThe bike store owner - *a devious blockchain enthusiast* - is willing to give you a 10% discount, if you manage to **pay him in a single transaction**\n\n*There has to be no change, buddy!* --Bike Store Owner\n\nSo we need to make sure to spend all our `tAda` from our two wallets in a single transaction.\n\n`tAda`\n\nHe can easily verify if we spent all our money by checking if the transaction has more than one output.\n\nThere are ways to optimize the amount you spend. We will leave this for you to figure out yourself.\n\n## Technical Flow[​](#technical-flow \"Direct link to Technical Flow\")\n\nThis scenario is pretty straight forward and looks like this.\n\n![img](/assets/images/multi-witness-transaction-8c57b0b78c7ad502d62713d0bd22a5a3.png \"Multi witness flow\")\n\n![img](/assets/images/multi-witness-transaction-8c57b0b78c7ad502d62713d0bd22a5a3.png \"Multi witness flow\")\n\nAs you can see in the diagram above, we will build and submit a **multi-witness transaction**, having *two inputs* and *one output*.\n\nWe can't do this with `cardano-wallet`, or any other wallet like Daedalus or Yoroi because we will need both `signing-keys` from **payment1** and **payment2** to sign the transaction.\n\n`cardano-wallet`\n`signing-keys`\n\n## Time to code[​](#time-to-code \"Direct link to Time to code\")\n\nAs mentioned above, this guide assumes you completed the [Exploring Cardano Wallets](/docs/integrate-cardano/creating-wallet-faucet) guide.  \nWe also assume you paid `174169 Lovelace` in transaction fees and that your current balances are:\n\n`174169 Lovelace`\n`749825831 Lovelace`\n`250000000 Lovelace`\n\n### Create a store-owner wallet[​](#create-a-store-owner-wallet \"Direct link to Create a store-owner wallet\")\n\nIf you don't already have a third wallet to use for this guide, let's create one where we can transfer all our funds to.\n\nMake sure you are inside the `keys` directory like so: `cd $HOME/cardano/keys`\n\n`keys`\n`cd $HOME/cardano/keys`\n\nGenerate a **payment key-pair** using `cardano-cli`:\n\n`cardano-cli`\n`cardano-cli address key-gen \\  \n--verification-key-file $HOME/cardano/keys/store-owner.vkey \\  \n--signing-key-file $HOME/cardano/keys/store-owner.skey`\n\nThen generate a **wallet address** for the testnet network:\n\n`cardano-cli address build \\  \n--payment-verification-key-file $HOME/cardano/keys/store-owner.vkey \\  \n--out-file $HOME/cardano/keys/store-owner.addr \\  \n--testnet-magic 1097911063`\n\nCheck your `keys` directory. It should look something like this:\n\n`keys`\n`$HOME/cardano/keys/  \n├── payment1.addr  \n├── payment1.skey  \n├── payment1.vkey  \n├── payment2.addr  \n├── payment2.skey  \n├── payment2.vkey  \n├── store-owner.addr  \n├── store-owner.skey  \n└── store-owner.vkey  \n  \n0 directories, 9 files`\n\n### Calculate the transaction fee[​](#calculate-the-transaction-fee \"Direct link to Calculate the transaction fee\")\n\nLets create a directory to store our transactions for this guide and enter it:\n\n`mkdir -p $HOME/cardano/multi-witness-sample && cd $_;`\n\nWe want to send **all our tAda** sitting at the two UTxO we verified [before](#recap) and send it to the `store-owner.addr`. That means we will have **two inputs**.\n\n`store-owner.addr`\n\nWhat about the outputs? Well, the *devious store-owner* wants us to spend it all, so there will be **one output to the store-owner** and **zero outputs to us**. Remember? *\"...no change, buddy!\"*\n\nLets build that transaction.\n\n`cardano-cli conway transaction build-raw \\  \n--tx-in b73b7503576412219241731230b5b7dd3b64eed62ccfc3ce69eb86822f1db251#0 \\  \n--tx-in b73b7503576412219241731230b5b7dd3b64eed62ccfc3ce69eb86822f1db251#1 \\  \n--tx-out $(cat ../keys/store-owner.addr)+0 \\  \n--fee 0 \\  \n--out-file tx2.draft`\n\nThe last thing we need to do is to calculate the fees for `tx2.draft`. Notice the `--tx-in-count` and `--witness-count`.\n\n`tx2.draft`\n`--tx-in-count`\n`--witness-count`\n`cardano-cli conway transaction calculate-min-fee \\  \n--tx-body-file tx2.draft \\  \n--tx-in-count 2 \\  \n--tx-out-count 1 \\  \n--witness-count 2 \\  \n--testnet-magic 1097911063 \\  \n--protocol-params-file ../protocol.json   \n179581 Lovelace`\n\nWe can calculate the amount the **store-owner** will receive, if both UTxO are spent during the transaction:\n\n `749825831 (payment1)  \n+ 250000000 (payment2)  \n ---------  \n 999825831  \n- 179581 (fee)  \n ---------  \n 999646250 (store-owner)  \n =========`\n\n### Build, sign and submit transaction[​](#build-sign-and-submit-transaction \"Direct link to Build, sign and submit transaction\")\n\nWe know the *output amount* as well as the *fee*. We can finally build, sign and submit our `tx2.draft` transaction.\n\n`tx2.draft`\n\nWe have to use `payment1.skey` and `payment2.skey` to sign our transaction.\n\n`payment1.skey`\n`payment2.skey`\n`cardano-cli conway transaction build-raw \\  \n--tx-in b73b7503576412219241731230b5b7dd3b64eed62ccfc3ce69eb86822f1db251#0 \\  \n--tx-in b73b7503576412219241731230b5b7dd3b64eed62ccfc3ce69eb86822f1db251#1 \\  \n--tx-out $(cat ../keys/store-owner.addr)+999646250 \\  \n--fee 179581 \\  \n--out-file tx2.draft   \n  \ncardano-cli conway transaction sign \\  \n--tx-body-file tx2.draft \\  \n--signing-key-file ../keys/payment1.skey \\  \n--signing-key-file ../keys/payment2.skey \\  \n--testnet-magic 1097911063 \\  \n--out-file tx2.signed  \n  \ncardano-cli conway transaction submit \\  \n--tx-file tx2.signed \\  \n--testnet-magic 1097911063  \nTransaction successfully submitted`\n\n### Verify multi-witness transactions[​](#verify-multi-witness-transactions \"Direct link to Verify multi-witness transactions\")\n\nThe devious store-owner will now verify that everything went according to his plan.\n\n`cardano-cli query utxo \\  \n--testnet-magic 1097911063 \\  \n--address $(cat $HOME/cardano/keys/store-owner.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \n258abd628eef7d6ff0f7b4e6866b4f7c21065f4d6b5e49b51e2ac4ff035ad06f 0 999646250 lovelace`\n\nHe can see that the transaction has one output to his wallet. No other outputs, hence you must have spent all of your `tAda`.\n\n`tAda`\n\nCongratulations, you are now able to submit **multi-witness transactions on Cardano**. This should help you bring integrations to your existing or new upcoming applications. 🎉🎉🎉",
  "images": [],
  "extraction_metadata": {
    "batch_number": 7,
    "extraction_timestamp": "2025-09-19T14:04:49.862174",
    "extraction_time": 2.4011168479919434,
    "source": "tavily_api_raw"
  }
}