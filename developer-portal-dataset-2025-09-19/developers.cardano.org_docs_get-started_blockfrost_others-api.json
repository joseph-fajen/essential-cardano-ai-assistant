{
  "url": "https://developers.cardano.org/docs/get-started/blockfrost/others-api",
  "content": "![Cardano Logo](/img/cardano-black.svg)\n![Cardano Logo](/img/cardano-white.svg)\n\n# IPFS and Milkomeda API\n\nIn addition to the Cardano ecosystem, [Blockfrost](https://blockfrost.io/) also offers entry points to other ecosystems:\n\n| Network | Endpoint |\n| --- | --- |\n| InterPlanetary File System (IPFS) | `https://ipfs.blockfrost.io/api/v0/` |\n| Milkomeda mainnet | `https://milkomeda-mainnet.blockfrost.io/api/v0/` |\n| Milkomeda testnet | `https://milkomeda-testnet.blockfrost.io/api/v0/` |\n\n`https://ipfs.blockfrost.io/api/v0/`\n`https://milkomeda-mainnet.blockfrost.io/api/v0/`\n`https://milkomeda-testnet.blockfrost.io/api/v0/`\n\n## IPFS[​](#ipfs \"Direct link to IPFS\")\n\nIPFS, or InterPlanetary File System, is a distributed, peer-to-peer protocol designed for efficient and secure sharing of files and data across a global network. Is it commonly utilized for storing digital content externally from the main chain.\n\n`export BLOCKFROST_PROJECT_ID_IPFS=ipfs_YOUR_PROJECT_ID  \ncurl \"https://ipfs.blockfrost.io/api/v0/ipfs/add\" \\  \n -X POST \\  \n -H \"project_id: $BLOCKFROST_PROJECT_ID_IPFS\" \\  \n -F \"file=@./static/img/logo.svg\"`\n`import { BlockFrostIPFS } from \"@blockfrost/blockfrost-js\";  \n  \nconst IPFS = new Blockfrost.BlockFrostIPFS({  \n projectId: \"YOUR IPFS KEY HERE\",  \n});  \n  \nasync function runExample() {  \n try {  \n const added = await IPFS.add(`${__dirname}/static/img/logo.svg`);  \n console.log(\"added\", added);  \n  \n const pinned = await IPFS.pin(added.ipfs_hash);  \n console.log(\"pinned\", pinned);  \n } catch (err) {  \n console.log(\"error\", err);  \n }  \n}  \n  \nrunExample();`\n\nThere are over [over 15 different SDKs](https://blockfrost.dev/docs/sdks) available for a variety of programming languages.\n\nWhen executed correctly, you will receive a response in JSON format, resembling the following:\n\n`{  \n \"name\": \"logo.svg\",  \n \"ipfs_hash\": \"QmUCXMTcvuJpwHF3gABRr69ceQR2uEG2Fsik9CyWh8MUoQ\",  \n \"size\": \"5617\"  \n}`\n\nTo learn more how to use IPFS with Blockfrost, have a look at the [official Blockfrost documentation](https://blockfrost.dev/docs/start-building/ipfs/)\n\n## Milkomeda[​](#milkomeda \"Direct link to Milkomeda\")\n\nMilkomeda is a protocol that brings EVM capabilities to non-EVM blockchains. As development progresses, Milkomeda will expand to offer L2 solutions (rollups) for several major blockchains including Cardano, Solana, and Algorand.\n\n`export BLOCKFROST_PROJECT_ID_MILKOMEDA_MAINNET=ipfs_YOUR_PROJECT_ID  \ncurl \"https://milkomeda-mainnet.blockfrost.io/api/v0/\" \\  \n -X POST \\  \n -H \"project_id: $BLOCKFROST_PROJECT_ID_MILKOMEDA_MAINNET\" \\  \n -d '{\"jsonrpc\": \"2.0\", \"id\": 1, \"method\": \"eth_blockNumber\", \"params\": []}'`\n\nWhen executed correctly, you will receive a response in JSON format, resembling the following:\n\n`{  \n \"jsonrpc\": \"2.0\",  \n \"id\": 1,  \n \"result\": \"0xa06919\"  \n}`\n\nTo learn more about how to use different JSON-RPC API calls or to setup the Metamask wallet, have a look at the [official Blockfrost documentation](https://blockfrost.dev/docs/start-building/milkomeda).",
  "images": [],
  "extraction_metadata": {
    "batch_number": 3,
    "extraction_timestamp": "2025-09-19T14:04:28.170127",
    "extraction_time": 1.090296983718872,
    "source": "tavily_api_raw"
  }
}