{
  "url": "https://docs.cardano.org/about-cardano/new-to-cardano/what-is-a-smart-contract",
  "content": "# What is a smart contract?\n\nSmart contracts on Cardano are simple programs often referred to as validator scripts in which users define custom logic. They are automatically executed by each Cardano node validating the transaction when the transaction attempts to move funds from the script's address. The address of each script is derived from the hash-sum of the compiled script.\n\nOnce deployed, smart contracts become immutable, which means they cannot be changed. They are distributable and tamper-proof, fast, and cost-effective, as there is no intermediary, which saves both money and time.\n\n## Tooling and languages[​](#tooling-and-languages \"Direct link to Tooling and languages\")\n\nCardano introduced smart contract support in 2021. As a multi-functional environment, Cardano now supports the development and deployment of smart contracts using different programming languages. Here are some examples:\n\n* [Plutus](https://plutus.readthedocs.io/en/latest/) — a purpose-built smart contract development and execution platform. Plutus contracts consist of parts that run on the blockchain (on-chain code) and parts that run on a user’s machine (off-chain or client code). Plutus draws from modern language research to provide a safe, full-stack programming environment based on Haskell, the leading functional programming language.\n* [Marlowe](https://docs.marlowe.iohk.io/docs/introduction) — a domain-specific language (DSL) for writing and executing financial contracts that allows building contracts visually as well as in more traditional code. Financial institutions can use it to develop and deploy custom instruments for their customers and clients, for example. The Marlowe language itself is now embedded in JavaScript, TypeScript, and Haskell offering a choice of editors depending on developers’ preferences and skills.\n* [Aiken](https://aiken-lang.org/) - a language and toolchain favoring developer experience. Aiken is used for on-chain validator scripts only.\n* [OpShin](https://github.com/OpShin) - a programming language based on Python for generic smart contracts for Cardano.\n* [plu-ts](https://github.com/HarmonicLabs/plu-ts) - TypeScript-embedded smart contract programming language and a transaction creation library.\n\ninfo\n\nDiscover more ecosystem [builder tools here.](https://developers.cardano.org/tools)\n\nFurther reading and related topics:\n\n* [Developer Portal - smart contracts overview](https://developers.cardano.org/docs/smart-contracts/)\n* [A list of community-built developer tools on Cardano](https://www.essentialcardano.io/article/a-list-of-community-built-developer-tools-on-cardano)\n\nOn this page\n\n* [Tooling and languages](#tooling-and-languages)\n\n ",
  "images": [],
  "extraction_metadata": {
    "batch_number": 3,
    "extraction_timestamp": "2025-09-29T13:36:11.408404",
    "extraction_time": 1.5864241123199463,
    "source": "tavily_api_raw"
  }
}