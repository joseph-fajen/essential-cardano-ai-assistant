{
  "url": "https://docs.cardano.org/developer-resources/transaction-tutorials/minting-transaction",
  "content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Minting transactions\n\nThe ability to create and manage custom tokens is one of the distinguishing features of the Cardano blockchain. Minting refers to the process of 'producing new tokens, either as part of an initial coin offering (ICO) or ongoing token issuance'. Minting transactions enable users to generate or burn tokens according to predefined rules. This tutorial explores the details of minting transactions on Cardano.\n\nConsider a scenario where Bob wants to give Alice a token, but only Bob has the minting authority for that token. To achieve this, Bob needs to create a script that defines the minting and burning rules. There are two approaches to accomplish this: using Plutus policy scripts or simple multi-signature scripts. In this case, the tutorial suggests using a simple multi-signature script since the rule is straightforward: only Bob can mint the token.\n\nBefore you begin, ensure that you have all the necessary components ready. First, you need to generate new keys for the script itself. The process for obtaining script keys is as follows:\n\n`$ cardano-cli address key-gen \\  \n --verification-key-file transactions-tutorial-policy/policy.vkey \\  \n --signing-key-file transactions-tutorial-policy/policy.skey`\n\nBefore creating the script, you need to get the key hash of the new keys:\n\n`$ cardano-cli address key-hash \\  \n --payment-verification-key-file transactions-tutorial-policy/policy.vkey  \n8ebd5f9c84fc25ae4506c7d0b687b2f7e82fe3f891036833e7f25c9b`\n\nYou can now create the script by writing the following code into `transactions-tutorial-policy/policy.script`:\n\n`transactions-tutorial-policy/policy.script`\n`{  \n “keyHash”: “8ebd5f9c84fc25ae4506c7d0b687b2f7e82fe3f891036833e7f25c9b”,  \n “type”: “sig”  \n}`\n\nYou can get the `PolicyId` with the following command:\n\n`PolicyId`\n`$ cardano-cli transaction policyid \\  \n --script-file transactions-tutorial-policy/policy.script   \nC38b0924e32e677f7787f0a0247b177588ec135db927688d8a63310a`\n\nIt is also helpful to store it in an environment variable:\n\n`export POLICY_ID=C38b0924e32e677f7787f0a0247b177588ec135db927688d8a63310a`\n\nNow, you need to create a token name, which has to be in hexadecimal (54657374546F6B656E):\n\n`export TOKEN_NAME=54657374546F6B656E`\n\nBuild the transaction:\n\n`cardano-cli transaction build \\  \n --tx-in f947f84f1156995afd695247a8dc8a508fd40d371ce0afb801029769a0104874#0 \\  \n --mint \"1 $(echo $POLICY_ID).$(echo $TOKEN_NAME)\" \\  \n --testnet-magic 1 \\  \n --change-address $(cat bob.addr) \\  \n --mint-script-file ../cardano/transactions-tutorial-policy/policy.script \\  \n --out-file minting.tx \\  \n --tx-out \"$(cat alice.addr)+1047330+1 $(echo $POLICY_ID).$(echo $TOKEN_NAME)\"`\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
  "images": [],
  "extraction_metadata": {
    "batch_number": 5,
    "extraction_timestamp": "2025-09-29T13:36:21.065926",
    "extraction_time": 2.0337350368499756,
    "source": "tavily_api_raw"
  }
}