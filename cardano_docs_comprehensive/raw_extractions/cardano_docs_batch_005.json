{
  "batch_number": 5,
  "urls": [
    "https://docs.cardano.org/developer-resources/smart-contracts/plutus",
    "https://docs.cardano.org/developer-resources/transaction-tutorials",
    "https://docs.cardano.org/developer-resources/transaction-tutorials/minting-transaction",
    "https://docs.cardano.org/developer-resources/transaction-tutorials/multiple-purposes",
    "https://docs.cardano.org/developer-resources/transaction-tutorials/redelegate-transaction",
    "https://docs.cardano.org/developer-resources/transaction-tutorials/stake-transaction",
    "https://docs.cardano.org/developer-resources/transaction-tutorials/withdraw-transaction",
    "https://docs.cardano.org/developer-resources/welcome",
    "https://docs.cardano.org/pioneer-programs/community-education",
    "https://docs.cardano.org/pioneer-programs/education",
    "https://docs.cardano.org/pioneer-programs/plutus-pioneers",
    "https://docs.cardano.org/stake-pool-operators/about-stake-pools",
    "https://docs.cardano.org/stake-pool-operators/creating-keys-and-certificates",
    "https://docs.cardano.org/stake-pool-operators/guidelines-for-large-spos",
    "https://docs.cardano.org/stake-pool-operators/maintenance"
  ],
  "extraction_time": 2.0337350368499756,
  "timestamp": "2025-09-29T13:36:21.065926",
  "response": {
    "results": [
      {
        "url": "https://docs.cardano.org/developer-resources/smart-contracts/plutus",
        "raw_content": "Plutus | Cardano Docs\n\n===============\n\nOpens in a new window Opens an external website Opens an external website in a new window\n\nThis website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising. To learn more, view the following link: [Privacy Policy](https://static.iohk.io/terms/iog-privacy-policy.pdf)[Cookie Policy](https://static.iohk.io/terms/iog-cookie-policy.pdf)\n\nManage Preferences \n\n[Skip to main content](https://docs.cardano.org/developer-resources/smart-contracts/plutus#__docusaurus_skipToContent_fallback)\n\n[![Image 1: Cardano logo](https://docs.cardano.org/assets/cardano-logo.svg)](https://docs.cardano.org/)[About](https://docs.cardano.org/about-cardano/introduction)[Developer resources](https://docs.cardano.org/developer-resources/welcome)[Stake pool operations](https://docs.cardano.org/stake-pool-operators/operating-a-stake-pool)[Testnets](https://docs.cardano.org/cardano-testnets/environments)[Education](https://docs.cardano.org/pioneer-programs/community-education)\n\n[Community](https://docs.cardano.org/developer-resources/smart-contracts/plutus#)\n*   [Support](https://iohk.zendesk.com/hc/en-us/requests/new)\n*   [Essential Cardano](https://www.essentialcardano.io/)\n*   [Cardano Stack Exchange](https://cardano.stackexchange.com/)\n*   [Ambassadors program](https://cardano.org/ambassadors/)\n*   [Cardano Improvement Proposals (CIPs)](https://cips.cardano.org/)\n\n[Developer portal](https://developers.cardano.org/)[](https://github.com/input-output-hk/cardano-documentation)\n\nSearch...\n\n*   [Welcome](https://docs.cardano.org/developer-resources/welcome)\n*   [The Cardano node video course](https://docs.cardano.org/developer-resources/cardano-node-course)\n*   [Transaction tutorials](https://docs.cardano.org/developer-resources/transaction-tutorials) \n*   [Native tokens](https://docs.cardano.org/developer-resources/native-tokens)\n*   [Smart contracts](https://docs.cardano.org/developer-resources/smart-contracts/plutus#) \n    *   [Plutus](https://docs.cardano.org/developer-resources/smart-contracts/plutus)\n    *   [Marlowe](https://docs.cardano.org/developer-resources/smart-contracts/marlowe)\n    *   [Aiken](https://docs.cardano.org/developer-resources/smart-contracts/aiken)\n\n*   [Scalability solutions](https://docs.cardano.org/developer-resources/smart-contracts/plutus#) \n*   [Release notes](https://docs.cardano.org/developer-resources/smart-contracts/plutus#) \n*   [Cardano updates](https://cardanoupdates.com/)\n*   [Builder tools](https://developers.cardano.org/tools)\n\n*   [](https://docs.cardano.org/)\n*   Smart contracts\n*   Plutus\n\nOn this page\n\n[Edit this page](https://github.com/input-output-hk/cardano-documentation/blob/master/docs/developer-resources/05-smart-contracts/01-plutus.mdx)\n\nPlutus\n======\n\ninfo\n\nTo start developing with Plutus, see:\n\n*   [Plutus Core documentation](https://plutus.cardano.intersectmbo.org/docs/)\n*   [Developer portal Plinth overview](https://developers.cardano.org/docs/smart-contracts/smart-contract-languages/plinth)\n*   'Plutus resources' below for more details.\n\nPlutus is the native smart contract language for Cardano. It is a Turing-complete language written in Haskell, and Plutus smart contracts are effectively Haskell programs. By using Plutus, you can be confident in the correct execution of your smart contracts. It draws from modern language research to provide a safe, full-stack programming environment based on Haskell, the leading purely-functional programming language.\n\nPlutus smart contracts[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-smart-contracts \"Direct link to Plutus smart contracts\")\n-------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nPlutus smart contracts consist of parts that run on the blockchain (on-chain code) and parts that run on a user’s machine (off-chain or client code). Off-chain code can be written using the Plutus Application Framework (PAF), and this code is then compiled by the GHC (Glasgow Haskell Compiler), whereas on-chain code is compiled by the Plutus compiler into Plutus Core.\n\nAccounting model used by Plutus[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#accounting-model-used-by-plutus \"Direct link to Accounting model used by Plutus\")\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nCardano uses the [extended UTXO accounting model (EUTXO)](https://ucarecdn.com/3da33f2f-73ac-4c9b-844b-f215dcce0628/EUTXOhandbook_for_EC.pdf) which extends the unspent (U) transaction (TX) output (O) accounting model (UTXO) (used by Bitcoin). In the UTXO model, a _transaction_ has _inputs_ and _outputs_, where the **inputs** are unspent outputs from previous transactions. As soon as an output is used as input in a transaction, it becomes spent and can never be used again. The **output** is specified by an _address_ (a public key or public key hash) and a _value_ (consisting of an ada amount and optional, additional native token amounts).\n\nEUTXO extends the UTXO model by allowing output addresses to contain complex logic to decide which transactions can unlock them, and by adding _custom data_ to _all_ outputs. This model offers unique advantages over other accounting models. The success or failure of transaction validation depends only on the transaction itself and its inputs and _not_ on anything else on the blockchain. Consequently, the validity of a transaction can be checked _off-chain_ before the transaction is sent to the blockchain. A transaction can still fail if some other transaction concurrently consumes an input that the transaction is expecting. However, if all inputs are still present, the transaction is _guaranteed_ to succeed.\n\nPlutus Core[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-core \"Direct link to Plutus Core\")\n----------------------------------------------------------------------------------------------------------------------------\n\nPlutus Core is the scripting language used by Cardano to implement the EUTXO model. It is a functional language similar to Haskell, and a large subset of Haskell can be used to write Plutus Core scripts. As a smart contract author, you don’t write any Plutus Core; rather, all Plutus Core scripts are generated by a Haskell compiler plugin.\n\nThese scripts will be executed by nodes during transaction validation ‘live’ on the chain. They will either lock EUTXOs in the form of validator scripts or as minting policies, which control the minting and burning of native tokens.\n\nIn practice, when developing smart contracts, you will write validator scripts in Haskell, which will then be automatically compiled into Plutus Core using a GHC plug-in called Plutus Tx.\n\nPlutus and native tokens[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-and-native-tokens \"Direct link to Plutus and native tokens\")\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nEach native token comes with its own minting policy, which determines the conditions under which tokens can be minted and burnt. Users can write minting policies in Haskell and compile them to Plutus Core. During the minting or burning process, the Plutus Core policy script is executed in the context of the minting or burning transaction, and the script will have to approve or forbid the action. This feature further accelerates the growth of non-fungible tokens (NFTs) on Cardano by enabling the creation of much more complex minting policies and allowing the creation of NFTs in a trustless manner.\n\nAdvantages of Plutus[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#advantages-of-plutus \"Direct link to Advantages of Plutus\")\n-------------------------------------------------------------------------------------------------------------------------------------------------------\n\nPlutus provides considerable security advantages. It delivers an easier, more robust way to show that your smart contracts are correct and will not encounter the problems found in previous smart contract language design.\n\nPlutus enables a novel integrated approach to smart contract and distributed application development that is more convenient and safer than previous alternatives. Both the on-chain and off-chain code are based on the same language. You use a uniform code base, which the Plutus toolchain then automatically separates into on-chain and off-chain code and packages for deployment.\n\nAdditionally, in contrast to Ethereum, Plutus supports user-defined tokens (both fungible and non-fungible) natively which does not require an accompanying smart contract.\n\nPlutus developer resources[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-developer-resources \"Direct link to Plutus developer resources\")\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n### Plutus Core[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-core-1 \"Direct link to Plutus Core\")\n\nPlutus Core is the scripting language embedded in the Cardano ledger. It forms the basis of the Plutus Platform – an application development platform for developing decentralized applications (DApps) on the Cardano blockchain.\n\n**Developer resources**:\n\n*   [Plutus Core GitHub repository](https://github.com/IntersectMBO/plutus): includes the implementation, specification, and mechanized metatheory of Plutus Core as well as Plutus Tx – the compiler from Haskell to Plutus Core.\n\n**Associated links**:\n\n*   [Talks](https://github.com/IntersectMBO/plutus#talks)\n*   [Specifications and design](https://github.com/IntersectMBO/plutus#specifications-and-design)\n*   [Academic papers](https://github.com/IntersectMBO/plutus#academic-papers)\n\n### Official Haskell language server implementation[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#official-haskell-language-server-implementation \"Direct link to Official Haskell language server implementation\")\n\nHaskell language server implementation is an implementation of a server for the Language Server Protocol (LSP). A language server talks to a client, who can ask the server to perform various operations, such as reporting errors or providing code completions.\n\n**Developer resources**:\n\n*   [Haskell language server documentation](https://haskell-language-server.readthedocs.io/en/latest/)\n\n### Haskell course[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#haskell-course \"Direct link to Haskell course\")\n\nPlutus Core is written in Haskell. To use Plutus, it is essential to know the basics of Haskell. To help with the onboarding journey, IOG's education team created the Haskell course for beginners. You can find the repository with explainers, links to lectures, and more below.\n\n*   [Haskell course](https://github.com/input-output-hk/haskell-course#haskell-course).\n\nPlutus user documentation[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-user-documentation \"Direct link to Plutus user documentation\")\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThis section includes references to Plutus user documentation such as explanations, tutorials, how-to guides, etc.\n\n**Documentation**:\n\n*   [Plutus Core and Plutus Tx user guide](https://plutus.readthedocs.io/en/latest/): introduces the Plutus Core programming language and programming with Plinth. Documentation includes explanations, tutorials, how-to instructions, troubleshooting, and reference information:\n\n*   [Video presentation on the Plutus Platform](https://www.youtube.com/watch?v=usMPt8KpBeI&feature=youtu.be): in this session from the 2020 Cardano Summit, Michael Peyton-Jones walks us through working with Plutus, while Jann Müller then takes us through the Plutus Application Platform, where assets can be built and launched. He also demonstrates how tokens can be transferred using a smart contract.\n\nPlutus Pioneer program[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-pioneer-program \"Direct link to Plutus Pioneer program\")\n-------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n*   [Plutus Pioneer program](https://github.com/input-output-hk/plutus-pioneer-program#readme): includes lectures, examples, and exercises\n*   [Plutus Pioneer program notes and documentation](https://plutus-pioneer-program.readthedocs.io/en/latest/)\n*   ['plutus-pioneer-program' questions on Cardano Stack Exchange](https://cardano.stackexchange.com/questions/tagged/plutus-pioneer-program)\n*   [Plutus Pioneer Discord](https://discord.com/channels/826816523368005654/826836848520200233)\n\n**Plutus Pioneer community notes**:\n\n*   [How to prepare for the Plutus Pioneer program](https://www.essentialcardano.io/article/how-to-prepare-for-the-plutus-pioneer-program)\n*   [Essential resources and documentation for the Plutus Pioneer program](https://www.essentialcardano.io/article/essential-resources-and-documentation-for-the-plutus-pioneer-program)\n*   [Plutus Pioneer program part 1: understanding the EUTXO model and coding the first smart contract](https://www.essentialcardano.io/article/plutus-pioneer-program-part-1-understanding-the-eutxo-model-and-coding-the-first-smart-contract)\n*   [Plutus Pioneer program - part 2: how to 'deploy' a smart contract on Cardano](https://www.essentialcardano.io/article/plutus-pioneer-program-part-2-how-to-deploy-a-smart-contract-in-cardano)\n*   [Plutus Pioneer program - part 3: how to mint and burn tokens and NFTs on Cardano](https://www.essentialcardano.io/article/plutus-pioneer-program-part-3-how-to-mint-and-burn-tokens-and-nfts-in-cardano)\n*   [Plutus Pioneer program - part 4: state machine with Plutus (1/2)](https://www.essentialcardano.io/article/plutus-pioneer-program-part-4-state-machine-with-plutus-12)\n*   [Plutus Pioneer program - part 5: state machine with Plutus (2/2)](https://www.essentialcardano.io/article/plutus-pioneer-program-part-5-state-machine-with-plutus-22)\n\nPlutus community resources[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-community-resources \"Direct link to Plutus community resources\")\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThis section provides links to Plutus community resources.\n\nIf you are a community member engaged with Plutus development, please raise a pull request to add more relevant links and information.\n\n*   [Cardano forum for Plutus discussions](https://forum.cardano.org/c/developers/cardano-plutus/148)\n*   [Plutus community docs](https://www.essentialcardano.io/article/plutus-community-docs-a-new-documentation-site-for-devs-by-devs) article\n*   [Plutus community docs](https://plutus-community.readthedocs.io/en/latest/)\n\n**Discussions & support:**\n\n*   [IOG Technical Discord](https://discord.com/channels/826816523368005654/897221118111400007)\n*   [Cardano Stack Exchange](https://cardano.stackexchange.com/)\n*   [Cardano Forum](https://forum.cardano.org/)\n\nPlutus tooling[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-tooling \"Direct link to Plutus tooling\")\n-------------------------------------------------------------------------------------------------------------------------------------\n\nThere are different tools that developers can use to evaluate and deploy smart contracts on Cardano:\n\n*   [An extended list of community-built developer tools on Cardano](https://www.essentialcardano.io/article/a-list-of-community-built-developer-tools-on-cardano): includes NFT creation tools, smart contract platforms, software libraries, APIs, interfaces, SDKs, digital product platforms, data services, blockchain integration, automation tools, decentralized protocols, enterprise apps, stake pool tooling, and more.\n\n*   **Emurgo**\n\n    *   [Cardano serialization library](https://github.com/Emurgo/cardano-serialization-lib#readme)\n\n*   **Plutonomicon**\n\n    *   [Plutonomicon - independent community Plutus documentation](https://github.com/Plutonomicon/plutonomicon/blob/main/README.md)\n    *   [Plutonomicon - GitHub repositories](https://github.com/Plutonomicon)\n    *   [Plutonomicon - cardano-transaction-lib](https://github.com/Plutonomicon/cardano-transaction-lib#readme)\n\n*   **OpShin**\n\n    *   [opshin - Pythonic smart contract tooling](https://github.com/OpShin)\n    *   [Smart contract benchmark](https://github.com/OpShin/plutus-bench)\n    *   [Generic smart contract optimization CLI](https://github.com/OpShin/plutonomy-cli)\n\n*   **Harmonic**\n\n    *   [HarmonicPool (Harmonic) - GitHub repositories](https://github.com/HarmonicPool)\n\n*   **TxPipe**\n\n    *   [Aiken](https://github.com/txpipe/aiken)\n    *   [Oura](https://github.com/txpipe/oura)\n    *   [Scrolls](https://github.com/txpipe/scrolls)\n    *   [Pallas](https://github.com/txpipe/pallas#readme)\n    *   [Demeter Run](https://demeter.run/) - a cloud environment with all the tools for building DApps on Cardano\n\n*   **dcSpark**\n\n    *   [Carp](https://github.com/dcSpark/carp/tree/main/docs)\n    *   [Cardano Multiplatform lib](https://github.com/dcSpark/cardano-multiplatform-lib)\n\n*   **MLabs**\n\n    *   [Plutlib](https://github.com/mlabs-haskell/plutip)\n\n*   **dQuadrant**\n\n    *   [Kuber](https://github.com/dQuadrant/kuber#readme)\n\n*   **CardanoSolutions**\n\n    *   [Kupo](https://github.com/CardanoSolutions/kupo#readme)\n    *   [Ogmios](https://github.com/CardanoSolutions/ogmios#readme)\n\n*   **Other tools**\n\n    *   [Blockfrost](https://github.com/blockfrost)\n    *   [Helios](https://github.com/Hyperion-bt/Helios#readme)\n    *   [Koios](https://koios.rest/)\n    *   [Lucid](https://github.com/spacebudz/lucid#readme)\n\n[Previous Native tokens](https://docs.cardano.org/developer-resources/native-tokens)[Next Marlowe](https://docs.cardano.org/developer-resources/smart-contracts/marlowe)\n\nOn this page\n*   [Plutus smart contracts](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-smart-contracts)\n*   [Accounting model used by Plutus](https://docs.cardano.org/developer-resources/smart-contracts/plutus#accounting-model-used-by-plutus)\n*   [Plutus Core](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-core)\n*   [Plutus and native tokens](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-and-native-tokens)\n*   [Advantages of Plutus](https://docs.cardano.org/developer-resources/smart-contracts/plutus#advantages-of-plutus)\n*   [Plutus developer resources](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-developer-resources)\n    *   [Plutus Core](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-core-1)\n    *   [Official Haskell language server implementation](https://docs.cardano.org/developer-resources/smart-contracts/plutus#official-haskell-language-server-implementation)\n    *   [Haskell course](https://docs.cardano.org/developer-resources/smart-contracts/plutus#haskell-course)\n\n*   [Plutus user documentation](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-user-documentation)\n*   [Plutus Pioneer program](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-pioneer-program)\n*   [Plutus community resources](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-community-resources)\n*   [Plutus tooling](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-tooling)\n\n![Image 2: Cardano Logo](https://docs.cardano.org/assets/cardano-logo-blue.svg)\n\nMore About Cardano\n\n*   [Cardano Explorer](https://cardanoexplorer.com/)\n*   [Cardano Foundation](https://cardanofoundation.org/)\n*   [Cardano.org](https://www.cardano.org/)\n*   [Daedalus](https://daedaluswallet.io/)\n\nJoin the community\n\n*   [Cardano Community](https://cardano.org/)\n*   [Cardano Telegram](https://t.me/CardanoAnnouncements/)\n*   [Cardano Forum](https://forum.cardano.org/)\n*   [Cardano Blog](https://www.reddit.com/r/cardano/)\n*   [IOHK](https://www.iohk.io/)\n*   [IOHK blog](https://www.iohk.io/blog/)\n*   [IOHK YouTube](https://www.youtube.com/channel/UCBJ0p9aCW-W82TwNM-z3V2w)\n*   [Cardano Foundation YouTube](https://www.youtube.com/channel/UCbQ9vGfezru1YRI1zDCtTGg)\n*   [Cardano Foundation Twitter](https://twitter.com/Cardano_CF)\n*   [IOG Academy](https://www.youtube.com/channel/UCX9j__vYOJu00iqBrCzecVw)\n\nFollow us\n\n*   [X](https://twitter.com/inputoutputHK)\n*   [Facebook](https://www.facebook.com/iohk.io/)\n*   [Youtube](https://www.youtube.com/c/IohkIo)\n*   [Reddit](https://www.reddit.com/r/cardano/)\n\nSubscribe to our newsletter\n\nEmail* \n\n*   - [x] By checking this box, I agree to allow IOG to store and process the personal data submitted on this form in accordance with the IOG [Privacy Policy](https://static.iohk.io/terms/iog-privacy-policy.pdf)* \n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project\n\n*   [IOHK Privacy Policy](https://static.iohk.io/terms/iog-privacy-policy.pdf)\n*   [IOHK Terms & Conditions](https://static.iohk.io/terms/iog-terms-and-conditions.pdf)\n",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/developer-resources/transaction-tutorials",
        "raw_content": "Transaction tutorials | Cardano Docs\n\n===============\n\nOpens in a new window Opens an external website Opens an external website in a new window\n\nThis website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising. To learn more, view the following link: [Privacy Policy](https://static.iohk.io/terms/iog-privacy-policy.pdf)[Cookie Policy](https://static.iohk.io/terms/iog-cookie-policy.pdf)\n\nManage Preferences \n\n[Skip to main content](https://docs.cardano.org/developer-resources/transaction-tutorials#__docusaurus_skipToContent_fallback)\n\n[![Image 1: Cardano logo](https://docs.cardano.org/assets/cardano-logo.svg)](https://docs.cardano.org/)[About](https://docs.cardano.org/about-cardano/introduction)[Developer resources](https://docs.cardano.org/developer-resources/welcome)[Stake pool operations](https://docs.cardano.org/stake-pool-operators/operating-a-stake-pool)[Testnets](https://docs.cardano.org/cardano-testnets/environments)[Education](https://docs.cardano.org/pioneer-programs/community-education)\n\n[Community](https://docs.cardano.org/developer-resources/transaction-tutorials#)\n*   [Support](https://iohk.zendesk.com/hc/en-us/requests/new)\n*   [Essential Cardano](https://www.essentialcardano.io/)\n*   [Cardano Stack Exchange](https://cardano.stackexchange.com/)\n*   [Ambassadors program](https://cardano.org/ambassadors/)\n*   [Cardano Improvement Proposals (CIPs)](https://cips.cardano.org/)\n\n[Developer portal](https://developers.cardano.org/)[](https://github.com/input-output-hk/cardano-documentation)\n\nSearch...\n\n*   [Welcome](https://docs.cardano.org/developer-resources/welcome)\n*   [The Cardano node video course](https://docs.cardano.org/developer-resources/cardano-node-course)\n*   [Transaction tutorials](https://docs.cardano.org/developer-resources/transaction-tutorials) \n    *   [Minting transactions](https://docs.cardano.org/developer-resources/transaction-tutorials/minting-transaction)\n    *   [Staking transactions](https://docs.cardano.org/developer-resources/transaction-tutorials/stake-transaction)\n    *   [Withdrawing transactions](https://docs.cardano.org/developer-resources/transaction-tutorials/withdraw-transaction)\n    *   [Redelegation](https://docs.cardano.org/developer-resources/transaction-tutorials/redelegate-transaction)\n    *   [Multiple purposes](https://docs.cardano.org/developer-resources/transaction-tutorials/multiple-purposes)\n\n*   [Native tokens](https://docs.cardano.org/developer-resources/native-tokens)\n*   [Smart contracts](https://docs.cardano.org/developer-resources/transaction-tutorials#) \n*   [Scalability solutions](https://docs.cardano.org/developer-resources/transaction-tutorials#) \n*   [Release notes](https://docs.cardano.org/developer-resources/transaction-tutorials#) \n*   [Cardano updates](https://cardanoupdates.com/)\n*   [Builder tools](https://developers.cardano.org/tools)\n\n*   [](https://docs.cardano.org/)\n*   Transaction tutorials\n\nOn this page\n\n[Edit this page](https://github.com/input-output-hk/cardano-documentation/blob/master/docs/developer-resources/03-transaction-tutorials/index.mdx)\n\nTransaction tutorials\n=====================\n\nA transaction is an event created, signed, and sent by a user to modify the ledger's state. It is commonly used to transfer ada or other tokens from one user to another. Additionally, it can serve various purposes, such as token creation, delegation registration to a stake pool, or interaction with smart contracts, among others. The process to modify the ledger through a transaction is as follows:\n\n*   **Creating the transaction**. A transaction includes a set of data that specifies how you intend to modify the ledger. The fundamental components of a transaction include UTXOs, from which the funds are sourced, and destination addresses to which you want to send funds along with the desired amount of tokens. There are various tools available to assist in creating transactions, such as wallets and `cardano-cli`.\n\n*   **Signing the transaction**. A user who owns the funds to be spent must provide authorization for the transaction through a signature. If the funds are held in a smart contract address, the authorization is carried out by executing the smart contract itself. Various tools are available to assist in signing transactions, including wallets and `cardano-cli`.\n\n*   **Submitting the transaction**. For a transaction to be reflected in the ledger, the user must submit it. These transactions are received by stake pools, validated, and then added to the ledger within a block.\n\nEach transaction includes an identifier known as `TxId`, and after completing these three steps, you can view transaction's content in the Cardano Explorer, accessible at [https://explorer.cardano.org](https://explorer.cardano.org/), for example.\n\nTransaction tutorials index[​](https://docs.cardano.org/developer-resources/transaction-tutorials#transaction-tutorials-index \"Direct link to Transaction tutorials index\")\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nIn this section, you will find tutorials on how to create:\n\n*   [Minting transactions](https://docs.cardano.org/developer-resources/transaction-tutorials/minting-transaction)\n*   [Staking transactions](https://docs.cardano.org/developer-resources/transaction-tutorials/stake-transaction)\n*   [Withdrawing transactions](https://docs.cardano.org/developer-resources/transaction-tutorials/withdraw-transaction)\n*   [Transactions with funds redelegation](https://docs.cardano.org/developer-resources/transaction-tutorials/redelegate-transaction)\n*   [Transactions for multiple purposes](https://docs.cardano.org/developer-resources/transaction-tutorials/multiple-purposes)\n\n**For additional references, see**:\n\n*   [Building and signing transactions](https://github.com/input-output-hk/cardano-node-wiki/blob/main/docs/reference/building-and-signing-tx.md)\n*   [Diagnosing transaction problems and troubleshooting](https://github.com/input-output-hk/cardano-node-wiki/blob/main/docs/reference/diagnosing-transactions.md)\n*   [Transaction metadata](https://github.com/input-output-hk/cardano-node-wiki/blob/main/docs/reference/tx-metadata.md)\n*   [Simple transactions](https://developers.cardano.org/docs/get-started/create-simple-transaction/)\n*   [Native assets](https://developers.cardano.org/docs/native-tokens/)\n*   [Cardano governance update proposals](https://github.com/input-output-hk/cardano-node-wiki/blob/main/docs/reference/cardano-governance.md)\n*   [Creating Cardano testnets](https://github.com/input-output-hk/cardano-node-wiki/blob/main/docs/reference/create-cardano.md)\n\n**Plutus scripts**\n\n*   [About Plutus scripts](https://github.com/input-output-hk/cardano-node-wiki/blob/main/docs/reference/plutus/babbage-script-example.md) (Plutus V2 examples)\n*   [Plutus spending script](https://github.com/input-output-hk/cardano-node-wiki/blob/main/docs/reference/plutus/plutus-spending-script-example.md)\n*   [Babbage certifying script example](https://github.com/input-output-hk/cardano-node-wiki/blob/main/docs/reference/plutus/babbage-certifying-script-example.md)\n*   [Babbage withdrawing script example](https://github.com/input-output-hk/cardano-node-wiki/blob/main/docs/reference/plutus/babbage-withdrawing-script-example.md)\n\n> Note: For more information about Plutus, tutorials, and how-to guides go to [Plinth user guide](https://plutus.readthedocs.io/en/latest/).\n\n**Vasil tutorials**\n\nThe tutorials below provide explainers of the CIPs introduced with Vasil functionality. Examples include the usage of Plutus v2 scripts:\n\n*   [How to use reference inputs](https://github.com/perturbing/vasil-tests/blob/main/reference-inputs-cip-31.md)\n*   [How to use inline datums](https://github.com/perturbing/vasil-tests/blob/main/inline-datums-cip-32.md)\n*   [How to reference scripts](https://github.com/perturbing/vasil-tests/blob/main/referencing-scripts-cip-33.md)\n*   [How to use collateral outputs](https://github.com/perturbing/vasil-tests/blob/main/collateral-output-cip-40.md)\n\n[Previous The Cardano node video course](https://docs.cardano.org/developer-resources/cardano-node-course)[Next Minting transactions](https://docs.cardano.org/developer-resources/transaction-tutorials/minting-transaction)\n\nOn this page\n*   [Transaction tutorials index](https://docs.cardano.org/developer-resources/transaction-tutorials#transaction-tutorials-index)\n\n![Image 2: Cardano Logo](https://docs.cardano.org/assets/cardano-logo-blue.svg)\n\nMore About Cardano\n\n*   [Cardano Explorer](https://cardanoexplorer.com/)\n*   [Cardano Foundation](https://cardanofoundation.org/)\n*   [Cardano.org](https://www.cardano.org/)\n*   [Daedalus](https://daedaluswallet.io/)\n\nJoin the community\n\n*   [Cardano Community](https://cardano.org/)\n*   [Cardano Telegram](https://t.me/CardanoAnnouncements/)\n*   [Cardano Forum](https://forum.cardano.org/)\n*   [Cardano Blog](https://www.reddit.com/r/cardano/)\n*   [IOHK](https://www.iohk.io/)\n*   [IOHK blog](https://www.iohk.io/blog/)\n*   [IOHK YouTube](https://www.youtube.com/channel/UCBJ0p9aCW-W82TwNM-z3V2w)\n*   [Cardano Foundation YouTube](https://www.youtube.com/channel/UCbQ9vGfezru1YRI1zDCtTGg)\n*   [Cardano Foundation Twitter](https://twitter.com/Cardano_CF)\n*   [IOG Academy](https://www.youtube.com/channel/UCX9j__vYOJu00iqBrCzecVw)\n\nFollow us\n\n*   [X](https://twitter.com/inputoutputHK)\n*   [Facebook](https://www.facebook.com/iohk.io/)\n*   [Youtube](https://www.youtube.com/c/IohkIo)\n*   [Reddit](https://www.reddit.com/r/cardano/)\n\nSubscribe to our newsletter\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project\n\n*   [IOHK Privacy Policy](https://static.iohk.io/terms/iog-privacy-policy.pdf)\n*   [IOHK Terms & Conditions](https://static.iohk.io/terms/iog-terms-and-conditions.pdf)",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/developer-resources/welcome",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Welcome\n\nWelcome to the developer resources section! Here you will find references to the\nresources that will help you with developing on Cardano.\n\n## Getting started[​](#getting-started \"Direct link to Getting started\")\n\n## Interfacing with Cardano[​](#interfacing-with-cardano \"Direct link to Interfacing with Cardano\")\n\nThere are various ways to interact with the Cardano node:\n\nYou can also rely on third-party services and managed API query layers such as\n[Blockfrost](https://blockfrost.io/), [Koios,](https://www.koios.rest/) or\n[Maestro](https://www.gomaestro.org/).\n\nFor more tools, refer to the most commonly used\n[builder tools](https://developers.cardano.org/tools) on the developer portal or\nsee this\n[list of community-built developer tools](https://www.essentialcardano.io/article/a-list-of-community-built-developer-tools-on-cardano).\n\nPlease note that this information is intended for informational purposes only\nand **does not** constitute an endorsement or recommendation of any specific\ntool or service.\n\n## Native tokens[​](#native-tokens \"Direct link to Native tokens\")\n\nTo start working with native tokens, see:\n\nYou can also explore Cardano assets using a variety of [explorer tools](/about-cardano/new-to-cardano/cardano-tracking-tools#exploring-assets).\n\n## Smart contracts[​](#smart-contracts \"Direct link to Smart contracts\")\n\nTo start working with smart contracts, see:\n\nThere are also many languages you can use to develop smart contracts:\n\n## Tools[​](#tools \"Direct link to Tools\")\n\nExplore Cardano's ecosystem:\n\n## Going further[​](#going-further \"Direct link to Going further\")\n\nKeep navigating this section to learn more about native tokens, smart contracts,\nand scalability solutions on Cardano. You will also find release notes, links\nto the ecosystem builder tools, and weekly development updates.\n\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/pioneer-programs/community-education",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Community education initiatives\n\nThis section aims to highlight the diverse educational efforts led by the Cardano community.\n\nThis space is dedicated to showcasing resources, programs, and projects that support learning and skill development across the ecosystem. Whether it’s tutorials, workshops, or other community-driven content, this section aims to reflect the collective knowledge and commitment to growing Cardano’s global reach.\n\nContributions are encouraged! Share your educational resources to expand this library and help others explore and understand Cardano. Please check the [contribution guidelines](/about-cardano/contributions) and submit a pull request.\n\n## Community education resources[​](#community-education-resources \"Direct link to Community education resources\")\n\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/stake-pool-operators/guidelines-for-large-spos",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Guidelines for operating large stake pools\n\nThis section provides guidelines for operators of large stake pools,\nspecifically how to manage the risks and complexity of maintaining significant\nstake or multiple pools. Operators of smaller stake pools may also find much of\nthis advice useful to them.\n\n### Main recommendations[​](#main-recommendations \"Direct link to Main recommendations\")\n\n### Managing risks and complexity[​](#managing-risks-and-complexity \"Direct link to Managing risks and complexity\")\n\nOperating stake pools effectively is crucial to ensure the long-term health and\nliveliness of decentralization on Cardano. When a stake pool operator (SPO)\noperates multiple stake pools (or has a single pool that directly controls a\nsignificant percentage of the total staked ada), they may have a significant\neffect on the overall system throughput as a consequence of the “proof-of-stake”\nprinciple.\n\nThe Cardano design and security analysis assume that each stake pool operates in\na broadly independent and mutually supportive (non-adversarial) manner. This\nmeans that large SPOs have a particular responsibility to ensure that their\noperation supports the needs of the network as a whole. For this, it is\nessential to evaluate and address common risks that may be experienced in stake\npool operations.\n\n**Virtualization and containerization risks**\n\nBecause stake pools and relay nodes have specific real-time requirements, it is\ngenerally not recommended to run Cardano nodes on virtualized resources without\nundertaking careful performance, reliability, and security analyses. The mapping\nof Cardano nodes to the underlying physical infrastructure must consider timing\nissues for block production and propagation.\n\n**Security and common-mode failures**\n\nThe risks of operating a stake pool using container-based virtualization include\nincreased chances of common-mode system failures, resource contention, and\nincreased exposure to security risks (including DOS attacks and loss of private\nkeys). The use of containerized environments, where relay nodes share the same\nphysical infrastructure as stake pool nodes, may impact real-time requirements\non block production and networking infrastructure, thus reducing stake pool\nincome. Moreover, concentrating network connections (as may happen with\nvirtualized or containerized services) increases the chances of a DOS attack, as\nwell as reduces network redundancy in non-obvious ways. In a virtualized or\nshared environment, a single NIC/cable failure or DOS attack, for instance,\nmight then affect multiple stake pools or relay nodes, including those that\nmight be run by different SPOs.\n\n**Shared resources**\n\nThe diffusion of a newly minted block causes a “pulse” of activity to occur.\nStake pools and relay nodes that share physical computing resources will be\nforced to compete for shared CPU, memory, storage, networking, and other\nresources. The demand for these resources is not smooth, it is correlated by the\nblock diffusion. This can negatively affect block production or result in\nblockchain synchronization failures. Under some conditions, performance can\ndegrade in a non-linear way (e.g., adding a second node may reduce performance\nby more than 50%). To eliminate such risks, it is important to analyze\nperformance requirements not only for the typical load but also for limit cases.\n\n**Maintenance and upgrade**\n\nSystem maintenance and upgrades should be always taken into consideration.\nAlthough migration of a virtualized instance to new hardware, or duplication of\na running instance might seem easy, this commonly results in some timing\ndisruption. This is more significant in a real-time setting (such as Cardano)\nthan for typical data processing applications, which often have high levels of\nreplication and redundancy. System upgrades may also have unexpected effects on\nthe virtualized system’s performance, or occasionally, functionality. SPOs,\ntherefore, need to be aware of underlying system maintenance and take\nappropriate action to avoid losing blocks (and income).\n\n**Geographical and physical concentration**\n\nVirtualized systems are often concentrated into a few large data centers. This\ncreates potential points of common network failures, including reliance on\nspecific portions of national infrastructures (internet backbones, power grids,\netc). Large SPOs should aim to disperse their operations across multiple\nregions, and very large operators should aim for a global presence.\n\n### Provisioning[​](#provisioning \"Direct link to Provisioning\")\n\nTo ensure overall network resilience and robustness, SPOs that operate large\nstake pools must take special care of:\n\n**Stake pool configuration**\n\n**Security preferences**\n\n**General advice**:\n\n#### Example system and relay topology configurations[​](#example-system-and-relay-topology-configurations \"Direct link to Example system and relay topology configurations\")\n\nThere is no standard system configuration as every stake pool has different\noperational requirements and preferences. It is the choice of an SPO on how to\nconfigure the topology.\n\nHowever, taking into account the earlier advice, it is recommended that an SPO\nmaintains at least two and an additional relay node(s) per a stake pool. In the\ncase of running multiple stake pools, it is best that SPOs use geographically\ndiverse peers, spread relay nodes across the world, and reach out to other SPOs\n(particularly other large ones) making agreements to add each other's relay\nnodes. The more SPOs they have peer-sharing agreements with, the more likely\ntheir blocks will propagate and get included in the chain.\n\nMonitoring is important for all SPOs, and it is essentially a responsibility of\nan operator to ensure the quality of their pools’ functionality. As an example\nof a monitoring process that reflects Prometheus rules alerting on thresholds,\none can take a look at the\n[cardano-ops repository here](https://github.com/input-output-hk/cardano-ops/blob/master/modules/monitoring-cardano.nix#L13).\n\n**Example relay topology**\n\n*Please note that IOHK relay nodes are outlined as examples.*\n\n`{  \n \"Producers\": [  \n {  \n \"addr\": \"north-america.relays-new.cardano-mainnet.iohk.io\",  \n \"port\": 3001,  \n \"valency\": 4  \n },  \n {  \n \"addr\": \"asia-pacific.relays-new.cardano-mainnet.iohk.io\",  \n \"port\": 3001,  \n \"valency\": 4  \n },  \n {  \n \"addr\": \"europe.relays-new.cardano-mainnet.iohk.io\",  \n \"port\": 3001,  \n \"valency\": 4  \n }  \n ]  \n}`\n\n#### Node configuration options[​](#node-configuration-options \"Direct link to Node configuration options\")\n\nThe `MaxConcurrencyDeadline` configuration option controls how many attempts the\nnode will run in parallel to fetch the same block. Considering that getting the\nsame block as soon as possible is important for both relay nodes and block\nproducer nodes, we recommend setting the MaxConcurrencyDeadline value to 4.\n\n`MaxConcurrencyDeadline`\n\n### Delegation and pledging advice[​](#delegation-and-pledging-advice \"Direct link to Delegation and pledging advice\")\n\n**Delegation**\n\nStake delegation is the process of allocating individual stakeholders’ funds to\ncollective stake pools. Delegation is performed for block production purposes to\nensure that the block creation complies with the *proof-of-stake* consensus. By\ndelegating, stakeholders do not transfer stake ownership, voting or other\nrights.\n\nLarge SPOs will generally control a significant amount of third-party stake to\nmaintain trust in the blockchain, thus being responsible for:\n\nLarge operators are not responsible for distributing block production rewards to\ndelegators as this is handled automatically by the blockchain. SPOs are also not\nresponsible for securing delegator keys or taking delegation, voting, or other\nactions on behalf of stakeholders. Individual stakeholders must take personal\nresponsibility for their own security and must make their own decisions in terms\nof delegation, voting, etc.\n\n**Pledging**\n\nPledging is an important mechanism for producing Cardano’s healthy ecosystem.\nSPOs may opt to pledge some, or all, of their ada to the pool in order to make\nit more attractive to other delegators, and thus to grow the size of the pool as\na whole. Pledged ada may be supplied either by an SPO or by other owners.\n\n**Pledging rewards**\n\nPledge influences the rewards that a stake pool can earn, and thus the rewards\nthat delegators can obtain from the pool. The pledging amount may be specified,\nif desired, during the pool registration, and can then be changed on an\nepoch-by-epoch basis. No minimum pledge is required, however, there is also no\nmaximum pledge.\n\nGiven two equivalent stake pools, the one with the greater pledge will earn more\nrewards, and therefore be more attractive to other delegators. However, the SPO\nor other pool owners should collectively meet the pledge by delegating. It is\nalso important to ensure that there are enough funds in addresses that use the\npool owner's address(es) as stake reference. **Failure to meet the pledge** will\nmean that no rewards can be earned for the pool by any owner or delegator. This\nwill generally result in loss of delegation and *perhaps* pool collapse.\n\n*Unlike delegation, the SPO is responsible for distributing all pledging\nrewards. This may be done in any agreed manner and is not enforced by the\nblockchain*.\n\nCollective stake pool operation (maintained by an operator and a group of\nowners, pledging their stake) requires mutual trust and is a good way to build a\nlarger pool while sharing the risks and rewards.\n\n**Defense against Sybil attacks**\n\nThe pledging mechanism is designed to mitigate against\n[Sybil attacks](https://iohk.io/en/blog/posts/2018/10/29/preventing-sybil-attacks/),\nwhich could theoretically allow a proof-of-stake network to be taken over\nwithout supplying a significant personal stake. By making pools with higher\npledges more attractive, such attacks are prevented. The pledge formula is\ndesigned so that a pool with a higher pledge will produce higher rewards and\nthus become more attractive. To conduct a Sybil attack, an adversary must divide\ntheir pledge amongst a large number of pools. Since this will dilute each pool\npledge, delegators will be motivated by the rewards mechanism to re-delegate to\nnon-adversarial pools.\n\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/developer-resources/transaction-tutorials/withdraw-transaction",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Withdrawing transactions\n\nThis part of the tutorial will demonstrate how easy it is to claim rewards using the `cardano-cli`. First, you need to ensure that you already have rewards available in your stake address. Check it with the following command:\n\n`cardano-cli`\n`$ cardano-cli query stake-address-info --address $(cat stake.addr)  \n[  \n {  \n \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\",  \n \"delegation\": \"pool18pn6p9ef58u4ga3wagp44qhzm8f6zncl57g6qgh0pk3yytwz54h\",  \n \"rewardAccountBalance\": 29385845  \n }  \n]`\n\nIn this case, you have ~29 ada. You also need some of your own ada to pay the fees, so you need to query your payment address:\n\n`$ cardano-cli query utxo --address $(cat payment.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \nafb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d 0 10000000 lovelace + TxOutDatumInline ReferenceTxInsScriptsInlineDatumsInBabbageEra (HashableScriptData \"\\216y\\159\\CAN*\\255\" (ScriptDataConstructor 0 [ScriptDataNumber 42]))  \nafb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d 1 9987657206 lovelace + TxOutDatumNone`\n\nUse the second UTXO with TxIx=1. You're ready to create your withdrawal transaction:\n\n`cardano-cli transaction build \\  \n --tx-in afb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d#1 \\  \n --withdrawal $(cat stake.addr)+29385845 \\  \n --change-address $(cat payment.addr) \\  \n --out-file withdrawal-tx.raw`\n\nNote that this transaction will take funds from the stake address, so it will need to be signed with the `stake.skey` file:\n\n`stake.skey`\n`cardano-cli transaction sign \\  \n --tx-file withdrawal-tx.raw \\  \n --signing-key-file payment.skey \\  \n --signing-key-file stake.skey \\  \n --out-file withdrawal-tx.signed  \n  \ncardano-cli transaction submit --tx-file withdrawal-tx.signed`\n\nFinally, verify that you have received your rewards in your payment address:\n\n`$ cardano-cli query utxo --address $(cat payment.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \n2b1bfc342c1f5531df4cfa220eac79574142c7263d97885d2ad8588ca1a7e22b 0 10016871698 lovelace + TxOutDatumNone  \nafb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d 0 10000000 lovelace + TxOutDatumInline ReferenceTxInsScriptsInlineDatumsInBabbageEra (HashableScriptData \"\\216y\\159\\CAN*\\255\" (ScriptDataConstructor 0 [ScriptDataNumber 42]))`\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/developer-resources/transaction-tutorials/minting-transaction",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Minting transactions\n\nThe ability to create and manage custom tokens is one of the distinguishing features of the Cardano blockchain. Minting refers to the process of 'producing new tokens, either as part of an initial coin offering (ICO) or ongoing token issuance'. Minting transactions enable users to generate or burn tokens according to predefined rules. This tutorial explores the details of minting transactions on Cardano.\n\nConsider a scenario where Bob wants to give Alice a token, but only Bob has the minting authority for that token. To achieve this, Bob needs to create a script that defines the minting and burning rules. There are two approaches to accomplish this: using Plutus policy scripts or simple multi-signature scripts. In this case, the tutorial suggests using a simple multi-signature script since the rule is straightforward: only Bob can mint the token.\n\nBefore you begin, ensure that you have all the necessary components ready. First, you need to generate new keys for the script itself. The process for obtaining script keys is as follows:\n\n`$ cardano-cli address key-gen \\  \n --verification-key-file transactions-tutorial-policy/policy.vkey \\  \n --signing-key-file transactions-tutorial-policy/policy.skey`\n\nBefore creating the script, you need to get the key hash of the new keys:\n\n`$ cardano-cli address key-hash \\  \n --payment-verification-key-file transactions-tutorial-policy/policy.vkey  \n8ebd5f9c84fc25ae4506c7d0b687b2f7e82fe3f891036833e7f25c9b`\n\nYou can now create the script by writing the following code into `transactions-tutorial-policy/policy.script`:\n\n`transactions-tutorial-policy/policy.script`\n`{  \n “keyHash”: “8ebd5f9c84fc25ae4506c7d0b687b2f7e82fe3f891036833e7f25c9b”,  \n “type”: “sig”  \n}`\n\nYou can get the `PolicyId` with the following command:\n\n`PolicyId`\n`$ cardano-cli transaction policyid \\  \n --script-file transactions-tutorial-policy/policy.script   \nC38b0924e32e677f7787f0a0247b177588ec135db927688d8a63310a`\n\nIt is also helpful to store it in an environment variable:\n\n`export POLICY_ID=C38b0924e32e677f7787f0a0247b177588ec135db927688d8a63310a`\n\nNow, you need to create a token name, which has to be in hexadecimal (54657374546F6B656E):\n\n`export TOKEN_NAME=54657374546F6B656E`\n\nBuild the transaction:\n\n`cardano-cli transaction build \\  \n --tx-in f947f84f1156995afd695247a8dc8a508fd40d371ce0afb801029769a0104874#0 \\  \n --mint \"1 $(echo $POLICY_ID).$(echo $TOKEN_NAME)\" \\  \n --testnet-magic 1 \\  \n --change-address $(cat bob.addr) \\  \n --mint-script-file ../cardano/transactions-tutorial-policy/policy.script \\  \n --out-file minting.tx \\  \n --tx-out \"$(cat alice.addr)+1047330+1 $(echo $POLICY_ID).$(echo $TOKEN_NAME)\"`\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/stake-pool-operators/about-stake-pools",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# About stake pools, operators, and owners\n\nA [stake pool](/about-cardano/learn/stake-pools) is a reliable server node that\nrepresents the combined stake of various stakeholders in a single entity. Stake\npools use the [Cardano node](https://docs.cardano.org/learn/cardano-node/) to\nform the backbone of the Cardano network by processing transactions and\nvalidating and producing blocks.\n\nStake pool roles include a stake pool operator and one or more stake pool\nowner(s). It is important to note the conceptual differences between the two:\n\nUsually, the stake pool operator and the owner are the same person. However, a\nstake pool can have multiple owners that choose to combine their pledge. It\nshould be noted that the stake pool's declared pledge must be met by the\ncombined stake in the owner's wallets and failure to do so will result in the\npool being unable to produce blocks.\n\nAll operator and owner rewards are paid out into a single rewards account\nassociated with the reward address of the pool. If a stake pool has multiple\nowners, it is up to the owner of the rewards account to distribute rewards to\nthe operator and other owners.\n\nAn agreement is likely needed to define when and how the accumulated rewards in\na shared account should be split. For example, they can agree to have the\noperator control the shared account, or they can choose to use a multisig\naccount.\n\nTo run a pool effectively, a bi-directional relationship and trust are crucial.\nIf this trust is broken, other parties can lose in regards to accumulated or\npotential rewards, or reputation for the operator.\n\nDeveloper resources:\n\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/stake-pool-operators/maintenance",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Stake pool operations and maintenance\n\nAfter a successful stake pool registration and its further operation, SPOs might\nbe interested in obtaining certain information about their pools’ activity.\nInformation about those pools that are operating on mainnet can be fetched using\ndifferent explorer tools. See\n[introduction](/stake-pool-operators/operating-a-stake-pool) for useful\nresources.\n\nIn certain cases, exchanges and stake pool operators, in particular, are looking\nfor in-depth information about their mainnet *and* testnet pools. To access data\nthat is stored on the Cardano blockchain, it is recommended to use\n[cardano-node](https://github.com/input-output-hk/cardano-node),\n[cardano-db-sync](https://github.com/input-output-hk/cardano-db-sync), or\n[cardano-graphql](https://github.com/input-output-hk/cardano-graphql).\n\nEach of the above integration components can be installed and easily deployed\nusing Docker.\n\nDeveloper resources:\n\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/pioneer-programs/education",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Input | Output education\n\n## IO initiatives[​](#io-initiatives \"Direct link to IO initiatives\")\n\nEducation is a cornerstone of fostering a knowledgeable and engaged global community. By prioritizing education, IO aims to share its expertise and empower individuals to contribute meaningfully to the Cardano ecosystem. Whether you're a developer, an academic, or a business professional, IO educational offerings are designed to equip you with the skills and knowledge needed to thrive in the blockchain space.\n\nThe team brings together extensive experience in curriculum design, project management, and the technical intricacies of Cardano, Haskell, and smart contracts. This collective skill set ensures that educational programs are comprehensive, practical, and tailored to diverse learners' needs.\n\n## Collaborations[​](#collaborations \"Direct link to Collaborations\")\n\nThe IO education team has collaborations with various universities and educational institutions worldwide to deliver high-quality education, including:\n\nAdditionally, the team has worked on curriculum design for blockchain programs with Yeovil College in the UK and Consilium Academy in South Africa.\n\n## Course offerings[​](#course-offerings \"Direct link to Course offerings\")\n\n### Mission-based education[​](#mission-based-education \"Direct link to Mission-based education\")\n\nThe education team has held several Cardano Day events across different locations:\n\n[ITESO University](https://www.iteso.mx/en/), Guadalajara, Mexico\n\n[University of Celaya,](https://www.udec.edu.mx/en/) Guanajuato, Mexico\n\n[University of Malta](https://www.um.edu.mt/), Valletta Campus, Valletta, Malta\n\n[University of Wyoming](https://www.uwyo.edu/), Laramie, USA.\n\n[University of Cantabria](https://web.unican.es/en/Pages/default.aspx), Santander, Spain\n\nThese events cover the basics of blockchain technology, Cardano, and smart contracts and prove very popular, with a typical NPS score of 92.\n\nMore events are continually planned, and if you would like to know more about hosting a Cardano Days event, please [get in touch](mailto:education@iohk.io).\n\n### Developer education[​](#developer-education \"Direct link to Developer education\")\n\n### Internal training[​](#internal-training \"Direct link to Internal training\")\n\n### Academic and business collaborations[​](#academic-and-business-collaborations \"Direct link to Academic and business collaborations\")\n\nIO also engages in academic and business collaborations, offering specialized lectures and workshops on blockchain and Cardano. These programs bridge the gap between theoretical knowledge and practical application, fostering innovation and real-world problem-solving skills.\n\nSome example initiatives include:\n\n### Resources[​](#resources \"Direct link to Resources\")\n\nFor more updates, please subscribe to the [IO Academy YouTube channel,](https://www.youtube.com/channel/UCX9j__vYOJu00iqBrCzecVw) where the team regularly publishes new lectures and educational content.\n\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/developer-resources/transaction-tutorials/redelegate-transaction",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Redelegation\n\nThis tutorial will show how to redelegate your stake to another stake pool. There can be multiple reasons to redelegate your stake, but the most common ones are:\n\nTo do that, you need to create a new certificate that you are sending in a transaction, as in the first part of the tutorial:\n\n`cardano-cli stake-address delegation-certificate \\  \n --stake-verification-key-file stake.vkey \\  \n --stake-pool-id pool1vzqtn3mtfvvuy8ghksy34gs9g97tszj5f8mr3sn7asy5vk577ec \\  \n --out-file new-delegation.cert`\n\nNow the delegation certificate contains the `--stake-pool-id` of the new stake pool. It means that you're ready to build your transaction, selecting the UTXO from which you will pay the fee:\n\n`--stake-pool-id`\n`$ cardano-cli query utxo --address $(cat payment.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \n2b1bfc342c1f5531df4cfa220eac79574142c7263d97885d2ad8588ca1a7e22b 0 10016871698 lovelace + TxOutDatumNone  \nafb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d 0 10000000 lovelace + TxOutDatumInline ReferenceTxInsScriptsInlineDatumsInBabbageEra (HashableScriptData \"\\216y\\159\\CAN*\\255\" (ScriptDataConstructor 0 [ScriptDataNumber 42]))`\n\nBuild:\n\n`cardano-cli transaction build \\  \n --witness-override 2 \\  \n --tx-in 2b1bfc342c1f5531df4cfa220eac79574142c7263d97885d2ad8588ca1a7e22b#0 \\  \n --change-address $(cat payment.addr) \\  \n --certificate new-delegation.cert \\  \n --out-file new-delegation.tx  \n  \nSign:  \n  \ncardano-cli transaction sign \\  \n --tx-file new-delegation.tx \\  \n --signing-key-file payment.skey \\  \n --signing-key-file stake.skey \\  \n --out-file new-delegation.signed  \n  \ncardano-cli transaction submit --tx-file new-delegation.signed`\n\nIf you check your stake address details, you'll see that you have delegated your stake to a new stake pool and you have zero rewards for now:\n\n`$ cardano-cli query stake-address-info --address $(cat stake.addr)  \n[  \n {  \n \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\",  \n \"delegation\": \"pool1vzqtn3mtfvvuy8ghksy34gs9g97tszj5f8mr3sn7asy5vk577ec\",  \n \"rewardAccountBalance\": 0  \n }  \n]`\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/stake-pool-operators/creating-keys-and-certificates",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Creating keys and operational certificates\n\n## About the stake pool operator keys[​](#about-the-stake-pool-operator-keys \"Direct link to About the stake pool operator keys\")\n\nIt is the responsibility of the operator to manage both the hot (online), and\ncold (offline) keys for the pool. Cold keys must be secure and should not reside\non a device that has internet connectivity. It is recommended that you have\nmultiple backups of your cold keys.\n\nThe keys that you need as a stake pool operator are:\n\nThe KES key, or hot key as mentioned above, is a node operational key that\nauthenticates who you are. You specify the validity of the KES key using the\nstart time and key period parameters and this KES key needs to be updated every\n90 days. The VRF key is a signing verification key and is stored within the\noperational certificate.\n\nDeveloper resources:\n\n## Creating an operational certificate and registering a stake pool[​](#creating-an-operational-certificate-and-registering-a-stake-pool \"Direct link to Creating an operational certificate and registering a stake pool\")\n\nStake pool operators must provide an operational certificate to verify that the\npool has the authority to run. The certificate includes the operator’s signature\nand important information about the pool (addresses, keys, etc.)\n\nOperational certificates represent the link between the operator’s offline key\nand their operational key. A certificate’s job is to check whether or not an\noperational key is valid, to prevent malicious interference. The certificate\nidentifies the current operational key, and is signed by the offline key.\n\nCertificates are generated with an issue counter number and included in the\nheader of each block the node generates.\n\nCertificates include a kes-period (start date), which indicates the period\nwithin which the certificate is valid before you need to create another one.\n\nCertificates are generated on the offline machine using the offline/cold keys,\nbefore being copied over to the node to validate the KES keys used to sign the\nblocks.\n\nDeveloper resources:\n\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/pioneer-programs/plutus-pioneers",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Plutus Pioneer program\n\nBefore starting, note that Plutus Core, Cardano’s native smart contract language, is written in Haskell. Since Plutus contracts are Haskell programs, a basic understanding of Haskell is essential for the Plutus Pioneer program.\n\nTherefore, it is recommended that users complete this self-paced [Haskell Bootcamp](https://github.com/input-output-hk/haskell-course?tab=readme-ov-file#haskell-course) course, which includes unique code examples, engaging exercises, and prepared solutions to learn Haskell fundamentals.\n\n## What is the Plutus Pioneer program?[​](#what-is-the-plutus-pioneer-program \"Direct link to What is the Plutus Pioneer program?\")\n\nIt is a program to recruit and train developers in Plutus for the Cardano\necosystem. When you join this program, you will become part of a group with\naccess to a set of lectures that teach you the core principles of how to code in\nboth Haskell and Plutus. It is highly interactive, with weekly videos,\nexercises, and Q&A sessions, along with exclusive access to the creators and key\nexperts in the language. You will also be able to join a dedicated community\nchannel, created to help pioneers connect with each other as you learn.\n\n## What prior experience do I need?[​](#what-prior-experience-do-i-need \"Direct link to What prior experience do I need?\")\n\nThis course is not for coding beginners. While you do not need to be an expert\nin formal methods, programming experience and a general aptitude for logical and\nmathematical thinking are highly desirable. Some prior knowledge of Haskell or\nfunctional programming is also recommended, as Plutus is heavily based on\nHaskell and includes advanced features like Template Haskell, type-level\nprogramming, and effect systems. We recommend that you work through **IO's**\nofficial [Haskell Course](https://github.com/input-output-hk/haskell-course).\nYou can also read the [Learn You a Haskell](http://learnyouahaskell.com/) book.\n\n## What can I expect to learn?[​](#what-can-i-expect-to-learn \"Direct link to What can I expect to learn?\")\n\nThis course involves approximately ten hours a week of your time and effort. It\ncovers the building blocks of Haskell and Plutus, including:\n\nAs with all learning experiences, the more you put in, the more you will get out!\n\n## When can I join?[​](#when-can-i-join \"Direct link to When can I join?\")\n\nWe have recently completed a very successful fourth cohort of this program and\nwill be launching another course later this year. Please register your interest\ntoday using the form below to find out more details.\n\n## How can I register for the Plutus Pioneer program?[​](#how-can-i-register-for-the-plutus-pioneer-program \"Direct link to How can I register for the Plutus Pioneer program?\")\n\nIf you are interested in joining a future cohort of this program, please\ncomplete the registration form below and we will be in touch soon.\n\n## Will I be certified?[​](#will-i-be-certified \"Direct link to Will I be certified?\")\n\nYes, we are working on certification for those pioneers who successfully\ncomplete the entire program. Certificates will be represented as non-fungible\ntokens (NFTs) (on the testnet) and locked by a Plutus contract. Pioneers can\ndemonstrate their qualification by constructing an appropriate transaction to\nunlock their individual token.\n\n## Yes, I'm interested![​](#yes-im-interested \"Direct link to Yes, I'm interested!\")\n\n**[REGISTER NOW](https://services.iohk.io/plutus-pioneers-registration)**\n\nPlease share your details and we will be in touch.\n\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/developer-resources/transaction-tutorials/stake-transaction",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Staking transactions\n\nStaking is a fundamental feature of Cardano, allowing you to earn rewards by delegating ada to stake pools. This tutorial shows how to delegate your ada to a stake pool, withdraw rewards, or stop delegating your ada if you decide to switch to another stake pool.\n\nTo delegate ada, first, you need to generate a stake key pair. This involves creating a `stake.vkey` and `stake.skey`, in addition to your regular payment key pair (`payment.vkey` and `payment.skey`), and obtaining a new address called `stake.addr`, similar to your `payment.addr`.\n\n`stake.vkey`\n`stake.skey`\n`payment.vkey`\n`payment.skey`\n`stake.addr`\n`payment.addr`\n\nAssuming you already have your `payment.vkey` and `payment.skey`, which you can easily generate using the `cardano-cli address key-gen` command, proceed by creating the `stake.vkey` and `stake.skey`:\n\n`payment.vkey`\n`payment.skey`\n`cardano-cli address key-gen`\n`stake.vkey`\n`stake.skey`\n`cardano-cli stake-address key-gen \\  \n --verification-key-file stake.vkey \\  \n --signing-key-file stake.skey`\n\nNow you have your payment key pair and stake key pair. The next step is to build the `payment.addr` and `stake.addr` files:\n\n`payment.addr`\n`stake.addr`\n`# payment.addr  \ncardano-cli address build \\  \n --payment-verification-key-file payment.vkey \\  \n --stake-verification-key-file stake.vkey \\  \n --out-file payment.addr`\n\nNote that the example includes the `--stake-verification-key-file` argument. This command is used to create an address that includes its staking part. Addresses without a staking part are primarily used for sending and receiving ada, as well as interacting with DApps. Some examples may omit this argument, but it's crucial for delegation and participating in the staking process.\n\n`--stake-verification-key-file`\n`# stake.addr  \ncardano-cli stake-address build \\  \n --stake-verification-key-file stake.vkey \\  \n --out-file stake.addr`\n\nThis command uses only the stake verification file.\n\nBefore proceeding with delegation, it's essential to create two new certificates: a registration certificate and a delegation certificate. These files are required to register the stake key on the blockchain and indicate your intention to delegate ada.\n\nThis command generates a certificate, which indicates the intention to register the stake key:\n\n`# registration.cert  \ncardano-cli stake-address registration-certificate \\  \n --stake-verification-key-file stake.vkey \\  \n --out-file reg.cert`\n\nCreate a delegation certificate:\n\n`# delegate.cert  \ncardano-cli stake-address delegation-certificate \\  \n --stake-verification-key-file stake.vkey \\  \n --stake-pool-id pool18pn6p9ef58u4ga3wagp44qhzm8f6zncl57g6qgh0pk3yytwz54h \\  \n --out-file delegation.cert`\n\nAt this stage of the tutorial, you should have already selected a stake pool. The example features ADACT (PoolId: pool18pn6p9ef58u4ga3wagp44qhzm8f6zncl57g6qgh0pk3yytwz54h). You can list all pools using the command `cardano-cli query stake-pools` or visit <https://preview.cardanoscan.io/pools> to select the pool that best suits your needs. Please note that the example uses the `preview` testnet. If you're using another testnet or mainnet, make sure that the pool ID is on the correct network.\n\n`cardano-cli query stake-pools`\n`preview`\n\nNow that you have the `reg.cert` and `delegation.cert` files, you can proceed to the next step. You need to send a transaction containing the certificates. There are two options: sending them individually or sending them together. The example shows how to send them both at the same time.\n\n`reg.cert`\n`delegation.cert`\n\nStart by querying the funds of `payment.addr`:\n\n`payment.addr`\n`cardano-cli query utxo --address $(cat payment.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \n142c46bb93b9c80140a6302e4a8a360e6f46f55aaf001c825ca790bb23572754 0 10000000000 lovelace + TxOutDatumNone`\n\nIf there are no funds in the address, you can request them from the [faucet](https://docs.cardano.org/cardano-testnet/tools/faucet/). Make sure you select the right testnet.\n\nIt's time to build, sign, and submit your transaction.\n\nThe command below introduces two new arguments of transaction creation: `--witness-override` and `certificate-file`. The first one specifies that the transaction will require two signatures. Therefore, transaction fees will be higher. `certificate-file` adds your new certificates to the transaction:\n\n`--witness-override`\n`certificate-file`\n`certificate-file`\n`cardano-cli transaction build \\  \n --witness-override 2 \\  \n --tx-in 142c46bb93b9c80140a6302e4a8a360e6f46f55aaf001c825ca790bb23572754#0 \\  \n --certificate-file reg.cert \\  \n --certificate-file delegation.cert \\  \n --change-address $(cat payment.addr) \\  \n --out-file delegateTx.raw`\n\nIn the signing phase, you need to add two signatures: `payment.skey` and `stake.skey`:\n\n`payment.skey`\n`stake.skey`\n`cardano-cli transaction sign \\  \n --tx-body-file delegateTx.raw \\  \n --signing-key-file payment.skey \\  \n --signing-key-file stake.skey \\  \n --out-file delegateTx.signed  \n   \ncardano-cli transaction submit \\  \n --tx-file delegateTx.signed  \nTransaction successfully submitted.`\n\nOnce the transaction is submitted and processed, you have successfully delegated your ada. Now, let's take a look at your delegation and rewards:\n\n`cardano-cli query stake-address-info --address $(cat stake.addr)  \n[  \n {  \n \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\",  \n \"delegation\": \"pool18pn6p9ef58u4ga3wagp44qhzm8f6zncl57g6qgh0pk3yytwz54h\",  \n \"rewardAccountBalance\": 0  \n }  \n]`\n\nAfter a few days, you will receive rewards, and the next part of the tutorial demonstrates how to withdraw them.\n\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      },
      {
        "url": "https://docs.cardano.org/developer-resources/transaction-tutorials/multiple-purposes",
        "raw_content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Multiple purposes\n\nCardano allows more complex transactions. So far you've seen various types of transactions: simple script, minting, staking, delegating, etc. But Cardano provides the flexibility to create more complex transactions and mix all the types of transactions needed. For example, adding metadata to minting transactions, or adding a staking component to a simple script transaction. This tutorial shows how to send a transaction with multiple purposes.\n\nIn this tutorial, you will learn how to:\n\nAs mentioned in the minting tutorial, one way to mint a token is by creating a script derived from a `keyHash`. For that, you first need to generate new keys and a key hash using the following commands:\n\n`keyHash`\n`cardano-cli address key-gen \\  \n --verification-key-file script.vkey \\  \n --signing-key-file script.skey  \n  \ncardano-cli address key-hash --payment-verification-key-file script.vkey  \n54a318b79a805f4f4cf0562a27302e93ed5b2e657cccdf4f6a8330ef`\n\nHaving the key hash, you can create the script as follows:\n\n`cat payment.script  \n{  \n \"keyHash\": \"54a318b79a805f4f4cf0562a27302e93ed5b2e657cccdf4f6a8330ef\",  \n \"type\": \"sig\"  \n}`\n\nYou also need to create the address and the policy ID of the script:\n\n`cardano-cli address build --payment-script-file payment.script   \naddr_test1wzgd97kc864w62ulela5ykw8m64z2nu4wjejacyfp6u7qwqyz9v9m`\n`cardano-cli transaction policyid --script-file payment.script  \n90d2fad83eaaed2b9fcffb4259c7deaa254f9574b32ee0890eb9e038`\n\n## First transaction[​](#first-transaction \"Direct link to First transaction\")\n\nFirst of all, you need to fund the script address using `payment.addr` funds:\n\n`payment.addr`\n`cardano-cli query utxo --address $(cat payment.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \n12bc01bca615bb4cbe5f36b06d86092ad3c8a10e6a37e09f94a5f006f3aaf230 0 10040283782 lovelace + TxOutDatumNone`\n\nIn this transaction, the example sets a `tx-out-inline-datum` file that only contains the number 42. This is essential since you wouldn't be able to get the funds from the script if it does not have a datum:\n\n`tx-out-inline-datum`\n`cardano-cli transaction build --tx-in 12bc01bca615bb4cbe5f36b06d86092ad3c8a10e6a37e09f94a5f006f3aaf230#0 --tx-out $(cat payment.script.addr)+10000000 --change-address $(cat payment.addr) --tx-out-inline-datum-file datum.json --out-file 1st.tx  \n  \ncat datum.json  \n{  \n \"constructor\": 0,  \n \"fields\": [{\"int\": 42}]  \n}`\n\n## Second transaction[​](#second-transaction \"Direct link to Second transaction\")\n\nIn this transaction, you can query the UTXO details:\n\n`cardano-cli query utxo --address $(cat payment.script.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \n04dfd8feaf87f82c8ec771954179879b22b5f693ed86d78a749111eed2de7879 0 10000000 lovelace + TxOutDatumInline ReferenceTxInsScriptsInlineDatumsInBabbageEra (HashableScriptData \"\\216y\\159\\CAN*\\255\" (ScriptDataConstructor 0 [ScriptDataNumber 42]))`\n`cardano-cli query utxo --address $(cat payment.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \n04dfd8feaf87f82c8ec771954179879b22b5f693ed86d78a749111eed2de7879 1 10030116301 lovelace + TxOutDatumNone`\n\nYou can also verify that you have available rewards:\n\n`cardano-cli query stake-address-info --address $(cat stake.addr)  \n[  \n {  \n \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\",  \n \"delegation\": \"pool1vzqtn3mtfvvuy8ghksy34gs9g97tszj5f8mr3sn7asy5vk577ec\",  \n \"rewardAccountBalance\": 15192167  \n }  \n]`\n\nNow you can build the transaction with multiple purposes:\n\n`cardano-cli transaction build \\  \n --tx-in 04dfd8feaf87f82c8ec771954179879b22b5f693ed86d78a749111eed2de7879#1 \\  \n --tx-in 04dfd8feaf87f82c8ec771954179879b22b5f693ed86d78a749111eed2de7879#0 \\  \n --tx-in-script-file payment.script \\  \n --change-address $(cat payment.addr) \\  \n --mint \"1 $(cat payment.script.policyid).746F6B656E\" \\  \n --mint-script-file payment.script \\  \n --withdrawal $(cat stake.addr)+15192167 \\  \n --metadata-json-file metadata.json \\  \n --out-file 2nd.tx`\n\nYou can see multiple things happening in this transaction:\n\n`mint-script-file`\n\nFinally, you can verify the result of signing and submitting the transaction:\n\nThe payment address now has:\n\n`cardano-cli query utxo --address $(cat payment.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------  \nc260ebce5868a56ce559f5277e6ca2d47b0eecb5b851b957fcb40a2194f67b29 0 10055118943 lovelace + 1 90d2fad83eaaed2b9fcffb4259c7deaa254f9574b32ee0890eb9e038.746f6b656e + TxOutDatumNone`\n\nThe script address does not have any funds.\n\n`cardano-cli query utxo --address $(cat payment.script.addr)  \n TxHash TxIx Amount  \n--------------------------------------------------------------------------------------`\n\nWe no longer have rewards from delegating:\n\n`cardano-cli query stake-address-info --address $(cat stake.addr)  \n[  \n {  \n \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\",  \n \"delegation\": \"pool1vzqtn3mtfvvuy8ghksy34gs9g97tszj5f8mr3sn7asy5vk577ec\",  \n \"rewardAccountBalance\": 0  \n }  \n]`\n\nAnd the best part, it was only done in one transaction.\n\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
        "images": []
      }
    ],
    "failed_results": [],
    "response_time": 1.23,
    "request_id": "194f8556-c262-441d-a0fe-734143f6fe21"
  }
}