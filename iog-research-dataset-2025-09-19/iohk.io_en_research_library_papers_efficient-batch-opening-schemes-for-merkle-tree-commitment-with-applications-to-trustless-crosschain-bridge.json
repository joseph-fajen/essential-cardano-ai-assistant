{
  "url": "https://iohk.io/en/research/library/papers/efficient-batch-opening-schemes-for-merkle-tree-commitment-with-applications-to-trustless-crosschain-bridge/",
  "content": "![IOHK logo](https://ucarecdn.com/a3d997dc-1781-445f-ad59-ad0e58c24cf3/-/resize/200/)\n\n![English](https://ucarecdn.com/c7b0ab3c-801b-48c4-af03-9ddee986dba6/-/resize/10/)English\n\n![English](https://ucarecdn.com/c7b0ab3c-801b-48c4-af03-9ddee986dba6/-/resize/10/)\n\n[Library](/en/research/library/) > Efficient Batch Opening Schemes for Merkle Tree Commitment with Applications to Trustless Crosschain Bridge\n\n# [Efficient Batch Opening Schemes for Merkle Tree Commitment with Applications to Trustless Crosschain Bridge](https://api.zotero.org/groups/478201/items/YYW99PAM/file/view?key=PnpP8O1NApZMMF0LVNh7I4I5)\n\nAugust/2025, ICCCN '25\n\nCROSSCHAINZKPROOFS\n\nIn blockchain systems, Merkle trees represent a fundamental cryptographic structure for verifying the validity of public keys in digital signatures. However, the verification process presents significant computational challenges, particularly when dealing with large-scale public key participation in signing operations. This paper focuses on addressing the efficiency bottlenecks in public key validity verification within Merkle tree commitments, with particular emphasis on their application in trustless cross-chain bridge protocols. While existing crosschain solutions predominantly rely on zero-knowledge proofs for blockchain state validation, the inherent computational cost of proof generation remains prohibitive.\n\nWe present a novel batch opening scheme for Merkle tree commitments that synergistically integrates Merkle tree construction from permutation arguments to verify the membership of extensive leaf sets. Our approach demonstrates remarkable proof generation efficiency advantages, particularly maintaining consistent performance regardless of the number of opened leaves, given a fixed tree depth. Our methods significantly reduce the computational overhead associated with public key validity verification. Meanwhile, it is fully applicable to the existing classical Merkle tree structure without any modifications and has universality.\n\nTo demonstrate the practicality and efficiency of our scheme, we implemented the Merkle tree opening circuit for three hash functions (Poseidon, Rescue and Keccak) based on our scheme. Our evaluation shows that the batch opening scheme achieves better performance: proof generation time begins to shorten from an opening ratio of 0.25, achieving a 3.5 to 7.1× improvement at a ratio of 0.75 (with tree depth = 9). Similar improvements are also reflected in the proof size and verification time. Moreover, as tree depth increases, our method’s performance advantages become more pronounced.\n\nView full paper\n\n![IOHK logo black and white](https://ucarecdn.com/306dc384-d0ae-479a-9b7e-2814fbeaea9b/-/resize/200/)\n\n##### Products\n\n##### Media\n\n##### Courses\n\n##### Legal\n\n##### Social",
  "images": [],
  "extraction_metadata": {
    "batch_number": 23,
    "extraction_timestamp": "2025-09-19T14:19:09.290919",
    "extraction_time": 1.8959262371063232,
    "source": "tavily_api_raw"
  }
}