{
  "url": "https://docs.cardano.org/developer-resources/smart-contracts/plutus",
  "content": "Plutus | Cardano Docs\n\n===============\n\nOpens in a new window Opens an external website Opens an external website in a new window\n\nThis website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising. To learn more, view the following link: [Privacy Policy](https://static.iohk.io/terms/iog-privacy-policy.pdf)[Cookie Policy](https://static.iohk.io/terms/iog-cookie-policy.pdf)\n\nManage Preferences \n\n[Skip to main content](https://docs.cardano.org/developer-resources/smart-contracts/plutus#__docusaurus_skipToContent_fallback)\n\n[![Image 1: Cardano logo](https://docs.cardano.org/assets/cardano-logo.svg)](https://docs.cardano.org/)[About](https://docs.cardano.org/about-cardano/introduction)[Developer resources](https://docs.cardano.org/developer-resources/welcome)[Stake pool operations](https://docs.cardano.org/stake-pool-operators/operating-a-stake-pool)[Testnets](https://docs.cardano.org/cardano-testnets/environments)[Education](https://docs.cardano.org/pioneer-programs/community-education)\n\n[Community](https://docs.cardano.org/developer-resources/smart-contracts/plutus#)\n*   [Support](https://iohk.zendesk.com/hc/en-us/requests/new)\n*   [Essential Cardano](https://www.essentialcardano.io/)\n*   [Cardano Stack Exchange](https://cardano.stackexchange.com/)\n*   [Ambassadors program](https://cardano.org/ambassadors/)\n*   [Cardano Improvement Proposals (CIPs)](https://cips.cardano.org/)\n\n[Developer portal](https://developers.cardano.org/)[](https://github.com/input-output-hk/cardano-documentation)\n\nSearch...\n\n*   [Welcome](https://docs.cardano.org/developer-resources/welcome)\n*   [The Cardano node video course](https://docs.cardano.org/developer-resources/cardano-node-course)\n*   [Transaction tutorials](https://docs.cardano.org/developer-resources/transaction-tutorials) \n*   [Native tokens](https://docs.cardano.org/developer-resources/native-tokens)\n*   [Smart contracts](https://docs.cardano.org/developer-resources/smart-contracts/plutus#) \n    *   [Plutus](https://docs.cardano.org/developer-resources/smart-contracts/plutus)\n    *   [Marlowe](https://docs.cardano.org/developer-resources/smart-contracts/marlowe)\n    *   [Aiken](https://docs.cardano.org/developer-resources/smart-contracts/aiken)\n\n*   [Scalability solutions](https://docs.cardano.org/developer-resources/smart-contracts/plutus#) \n*   [Release notes](https://docs.cardano.org/developer-resources/smart-contracts/plutus#) \n*   [Cardano updates](https://cardanoupdates.com/)\n*   [Builder tools](https://developers.cardano.org/tools)\n\n*   [](https://docs.cardano.org/)\n*   Smart contracts\n*   Plutus\n\nOn this page\n\n[Edit this page](https://github.com/input-output-hk/cardano-documentation/blob/master/docs/developer-resources/05-smart-contracts/01-plutus.mdx)\n\nPlutus\n======\n\ninfo\n\nTo start developing with Plutus, see:\n\n*   [Plutus Core documentation](https://plutus.cardano.intersectmbo.org/docs/)\n*   [Developer portal Plinth overview](https://developers.cardano.org/docs/smart-contracts/smart-contract-languages/plinth)\n*   'Plutus resources' below for more details.\n\nPlutus is the native smart contract language for Cardano. It is a Turing-complete language written in Haskell, and Plutus smart contracts are effectively Haskell programs. By using Plutus, you can be confident in the correct execution of your smart contracts. It draws from modern language research to provide a safe, full-stack programming environment based on Haskell, the leading purely-functional programming language.\n\nPlutus smart contracts[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-smart-contracts \"Direct link to Plutus smart contracts\")\n-------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nPlutus smart contracts consist of parts that run on the blockchain (on-chain code) and parts that run on a user’s machine (off-chain or client code). Off-chain code can be written using the Plutus Application Framework (PAF), and this code is then compiled by the GHC (Glasgow Haskell Compiler), whereas on-chain code is compiled by the Plutus compiler into Plutus Core.\n\nAccounting model used by Plutus[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#accounting-model-used-by-plutus \"Direct link to Accounting model used by Plutus\")\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nCardano uses the [extended UTXO accounting model (EUTXO)](https://ucarecdn.com/3da33f2f-73ac-4c9b-844b-f215dcce0628/EUTXOhandbook_for_EC.pdf) which extends the unspent (U) transaction (TX) output (O) accounting model (UTXO) (used by Bitcoin). In the UTXO model, a _transaction_ has _inputs_ and _outputs_, where the **inputs** are unspent outputs from previous transactions. As soon as an output is used as input in a transaction, it becomes spent and can never be used again. The **output** is specified by an _address_ (a public key or public key hash) and a _value_ (consisting of an ada amount and optional, additional native token amounts).\n\nEUTXO extends the UTXO model by allowing output addresses to contain complex logic to decide which transactions can unlock them, and by adding _custom data_ to _all_ outputs. This model offers unique advantages over other accounting models. The success or failure of transaction validation depends only on the transaction itself and its inputs and _not_ on anything else on the blockchain. Consequently, the validity of a transaction can be checked _off-chain_ before the transaction is sent to the blockchain. A transaction can still fail if some other transaction concurrently consumes an input that the transaction is expecting. However, if all inputs are still present, the transaction is _guaranteed_ to succeed.\n\nPlutus Core[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-core \"Direct link to Plutus Core\")\n----------------------------------------------------------------------------------------------------------------------------\n\nPlutus Core is the scripting language used by Cardano to implement the EUTXO model. It is a functional language similar to Haskell, and a large subset of Haskell can be used to write Plutus Core scripts. As a smart contract author, you don’t write any Plutus Core; rather, all Plutus Core scripts are generated by a Haskell compiler plugin.\n\nThese scripts will be executed by nodes during transaction validation ‘live’ on the chain. They will either lock EUTXOs in the form of validator scripts or as minting policies, which control the minting and burning of native tokens.\n\nIn practice, when developing smart contracts, you will write validator scripts in Haskell, which will then be automatically compiled into Plutus Core using a GHC plug-in called Plutus Tx.\n\nPlutus and native tokens[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-and-native-tokens \"Direct link to Plutus and native tokens\")\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nEach native token comes with its own minting policy, which determines the conditions under which tokens can be minted and burnt. Users can write minting policies in Haskell and compile them to Plutus Core. During the minting or burning process, the Plutus Core policy script is executed in the context of the minting or burning transaction, and the script will have to approve or forbid the action. This feature further accelerates the growth of non-fungible tokens (NFTs) on Cardano by enabling the creation of much more complex minting policies and allowing the creation of NFTs in a trustless manner.\n\nAdvantages of Plutus[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#advantages-of-plutus \"Direct link to Advantages of Plutus\")\n-------------------------------------------------------------------------------------------------------------------------------------------------------\n\nPlutus provides considerable security advantages. It delivers an easier, more robust way to show that your smart contracts are correct and will not encounter the problems found in previous smart contract language design.\n\nPlutus enables a novel integrated approach to smart contract and distributed application development that is more convenient and safer than previous alternatives. Both the on-chain and off-chain code are based on the same language. You use a uniform code base, which the Plutus toolchain then automatically separates into on-chain and off-chain code and packages for deployment.\n\nAdditionally, in contrast to Ethereum, Plutus supports user-defined tokens (both fungible and non-fungible) natively which does not require an accompanying smart contract.\n\nPlutus developer resources[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-developer-resources \"Direct link to Plutus developer resources\")\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n### Plutus Core[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-core-1 \"Direct link to Plutus Core\")\n\nPlutus Core is the scripting language embedded in the Cardano ledger. It forms the basis of the Plutus Platform – an application development platform for developing decentralized applications (DApps) on the Cardano blockchain.\n\n**Developer resources**:\n\n*   [Plutus Core GitHub repository](https://github.com/IntersectMBO/plutus): includes the implementation, specification, and mechanized metatheory of Plutus Core as well as Plutus Tx – the compiler from Haskell to Plutus Core.\n\n**Associated links**:\n\n*   [Talks](https://github.com/IntersectMBO/plutus#talks)\n*   [Specifications and design](https://github.com/IntersectMBO/plutus#specifications-and-design)\n*   [Academic papers](https://github.com/IntersectMBO/plutus#academic-papers)\n\n### Official Haskell language server implementation[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#official-haskell-language-server-implementation \"Direct link to Official Haskell language server implementation\")\n\nHaskell language server implementation is an implementation of a server for the Language Server Protocol (LSP). A language server talks to a client, who can ask the server to perform various operations, such as reporting errors or providing code completions.\n\n**Developer resources**:\n\n*   [Haskell language server documentation](https://haskell-language-server.readthedocs.io/en/latest/)\n\n### Haskell course[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#haskell-course \"Direct link to Haskell course\")\n\nPlutus Core is written in Haskell. To use Plutus, it is essential to know the basics of Haskell. To help with the onboarding journey, IOG's education team created the Haskell course for beginners. You can find the repository with explainers, links to lectures, and more below.\n\n*   [Haskell course](https://github.com/input-output-hk/haskell-course#haskell-course).\n\nPlutus user documentation[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-user-documentation \"Direct link to Plutus user documentation\")\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThis section includes references to Plutus user documentation such as explanations, tutorials, how-to guides, etc.\n\n**Documentation**:\n\n*   [Plutus Core and Plutus Tx user guide](https://plutus.readthedocs.io/en/latest/): introduces the Plutus Core programming language and programming with Plinth. Documentation includes explanations, tutorials, how-to instructions, troubleshooting, and reference information:\n\n*   [Video presentation on the Plutus Platform](https://www.youtube.com/watch?v=usMPt8KpBeI&feature=youtu.be): in this session from the 2020 Cardano Summit, Michael Peyton-Jones walks us through working with Plutus, while Jann Müller then takes us through the Plutus Application Platform, where assets can be built and launched. He also demonstrates how tokens can be transferred using a smart contract.\n\nPlutus Pioneer program[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-pioneer-program \"Direct link to Plutus Pioneer program\")\n-------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n*   [Plutus Pioneer program](https://github.com/input-output-hk/plutus-pioneer-program#readme): includes lectures, examples, and exercises\n*   [Plutus Pioneer program notes and documentation](https://plutus-pioneer-program.readthedocs.io/en/latest/)\n*   ['plutus-pioneer-program' questions on Cardano Stack Exchange](https://cardano.stackexchange.com/questions/tagged/plutus-pioneer-program)\n*   [Plutus Pioneer Discord](https://discord.com/channels/826816523368005654/826836848520200233)\n\n**Plutus Pioneer community notes**:\n\n*   [How to prepare for the Plutus Pioneer program](https://www.essentialcardano.io/article/how-to-prepare-for-the-plutus-pioneer-program)\n*   [Essential resources and documentation for the Plutus Pioneer program](https://www.essentialcardano.io/article/essential-resources-and-documentation-for-the-plutus-pioneer-program)\n*   [Plutus Pioneer program part 1: understanding the EUTXO model and coding the first smart contract](https://www.essentialcardano.io/article/plutus-pioneer-program-part-1-understanding-the-eutxo-model-and-coding-the-first-smart-contract)\n*   [Plutus Pioneer program - part 2: how to 'deploy' a smart contract on Cardano](https://www.essentialcardano.io/article/plutus-pioneer-program-part-2-how-to-deploy-a-smart-contract-in-cardano)\n*   [Plutus Pioneer program - part 3: how to mint and burn tokens and NFTs on Cardano](https://www.essentialcardano.io/article/plutus-pioneer-program-part-3-how-to-mint-and-burn-tokens-and-nfts-in-cardano)\n*   [Plutus Pioneer program - part 4: state machine with Plutus (1/2)](https://www.essentialcardano.io/article/plutus-pioneer-program-part-4-state-machine-with-plutus-12)\n*   [Plutus Pioneer program - part 5: state machine with Plutus (2/2)](https://www.essentialcardano.io/article/plutus-pioneer-program-part-5-state-machine-with-plutus-22)\n\nPlutus community resources[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-community-resources \"Direct link to Plutus community resources\")\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nThis section provides links to Plutus community resources.\n\nIf you are a community member engaged with Plutus development, please raise a pull request to add more relevant links and information.\n\n*   [Cardano forum for Plutus discussions](https://forum.cardano.org/c/developers/cardano-plutus/148)\n*   [Plutus community docs](https://www.essentialcardano.io/article/plutus-community-docs-a-new-documentation-site-for-devs-by-devs) article\n*   [Plutus community docs](https://plutus-community.readthedocs.io/en/latest/)\n\n**Discussions & support:**\n\n*   [IOG Technical Discord](https://discord.com/channels/826816523368005654/897221118111400007)\n*   [Cardano Stack Exchange](https://cardano.stackexchange.com/)\n*   [Cardano Forum](https://forum.cardano.org/)\n\nPlutus tooling[​](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-tooling \"Direct link to Plutus tooling\")\n-------------------------------------------------------------------------------------------------------------------------------------\n\nThere are different tools that developers can use to evaluate and deploy smart contracts on Cardano:\n\n*   [An extended list of community-built developer tools on Cardano](https://www.essentialcardano.io/article/a-list-of-community-built-developer-tools-on-cardano): includes NFT creation tools, smart contract platforms, software libraries, APIs, interfaces, SDKs, digital product platforms, data services, blockchain integration, automation tools, decentralized protocols, enterprise apps, stake pool tooling, and more.\n\n*   **Emurgo**\n\n    *   [Cardano serialization library](https://github.com/Emurgo/cardano-serialization-lib#readme)\n\n*   **Plutonomicon**\n\n    *   [Plutonomicon - independent community Plutus documentation](https://github.com/Plutonomicon/plutonomicon/blob/main/README.md)\n    *   [Plutonomicon - GitHub repositories](https://github.com/Plutonomicon)\n    *   [Plutonomicon - cardano-transaction-lib](https://github.com/Plutonomicon/cardano-transaction-lib#readme)\n\n*   **OpShin**\n\n    *   [opshin - Pythonic smart contract tooling](https://github.com/OpShin)\n    *   [Smart contract benchmark](https://github.com/OpShin/plutus-bench)\n    *   [Generic smart contract optimization CLI](https://github.com/OpShin/plutonomy-cli)\n\n*   **Harmonic**\n\n    *   [HarmonicPool (Harmonic) - GitHub repositories](https://github.com/HarmonicPool)\n\n*   **TxPipe**\n\n    *   [Aiken](https://github.com/txpipe/aiken)\n    *   [Oura](https://github.com/txpipe/oura)\n    *   [Scrolls](https://github.com/txpipe/scrolls)\n    *   [Pallas](https://github.com/txpipe/pallas#readme)\n    *   [Demeter Run](https://demeter.run/) - a cloud environment with all the tools for building DApps on Cardano\n\n*   **dcSpark**\n\n    *   [Carp](https://github.com/dcSpark/carp/tree/main/docs)\n    *   [Cardano Multiplatform lib](https://github.com/dcSpark/cardano-multiplatform-lib)\n\n*   **MLabs**\n\n    *   [Plutlib](https://github.com/mlabs-haskell/plutip)\n\n*   **dQuadrant**\n\n    *   [Kuber](https://github.com/dQuadrant/kuber#readme)\n\n*   **CardanoSolutions**\n\n    *   [Kupo](https://github.com/CardanoSolutions/kupo#readme)\n    *   [Ogmios](https://github.com/CardanoSolutions/ogmios#readme)\n\n*   **Other tools**\n\n    *   [Blockfrost](https://github.com/blockfrost)\n    *   [Helios](https://github.com/Hyperion-bt/Helios#readme)\n    *   [Koios](https://koios.rest/)\n    *   [Lucid](https://github.com/spacebudz/lucid#readme)\n\n[Previous Native tokens](https://docs.cardano.org/developer-resources/native-tokens)[Next Marlowe](https://docs.cardano.org/developer-resources/smart-contracts/marlowe)\n\nOn this page\n*   [Plutus smart contracts](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-smart-contracts)\n*   [Accounting model used by Plutus](https://docs.cardano.org/developer-resources/smart-contracts/plutus#accounting-model-used-by-plutus)\n*   [Plutus Core](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-core)\n*   [Plutus and native tokens](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-and-native-tokens)\n*   [Advantages of Plutus](https://docs.cardano.org/developer-resources/smart-contracts/plutus#advantages-of-plutus)\n*   [Plutus developer resources](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-developer-resources)\n    *   [Plutus Core](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-core-1)\n    *   [Official Haskell language server implementation](https://docs.cardano.org/developer-resources/smart-contracts/plutus#official-haskell-language-server-implementation)\n    *   [Haskell course](https://docs.cardano.org/developer-resources/smart-contracts/plutus#haskell-course)\n\n*   [Plutus user documentation](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-user-documentation)\n*   [Plutus Pioneer program](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-pioneer-program)\n*   [Plutus community resources](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-community-resources)\n*   [Plutus tooling](https://docs.cardano.org/developer-resources/smart-contracts/plutus#plutus-tooling)\n\n![Image 2: Cardano Logo](https://docs.cardano.org/assets/cardano-logo-blue.svg)\n\nMore About Cardano\n\n*   [Cardano Explorer](https://cardanoexplorer.com/)\n*   [Cardano Foundation](https://cardanofoundation.org/)\n*   [Cardano.org](https://www.cardano.org/)\n*   [Daedalus](https://daedaluswallet.io/)\n\nJoin the community\n\n*   [Cardano Community](https://cardano.org/)\n*   [Cardano Telegram](https://t.me/CardanoAnnouncements/)\n*   [Cardano Forum](https://forum.cardano.org/)\n*   [Cardano Blog](https://www.reddit.com/r/cardano/)\n*   [IOHK](https://www.iohk.io/)\n*   [IOHK blog](https://www.iohk.io/blog/)\n*   [IOHK YouTube](https://www.youtube.com/channel/UCBJ0p9aCW-W82TwNM-z3V2w)\n*   [Cardano Foundation YouTube](https://www.youtube.com/channel/UCbQ9vGfezru1YRI1zDCtTGg)\n*   [Cardano Foundation Twitter](https://twitter.com/Cardano_CF)\n*   [IOG Academy](https://www.youtube.com/channel/UCX9j__vYOJu00iqBrCzecVw)\n\nFollow us\n\n*   [X](https://twitter.com/inputoutputHK)\n*   [Facebook](https://www.facebook.com/iohk.io/)\n*   [Youtube](https://www.youtube.com/c/IohkIo)\n*   [Reddit](https://www.reddit.com/r/cardano/)\n\nSubscribe to our newsletter\n\nEmail* \n\n*   - [x] By checking this box, I agree to allow IOG to store and process the personal data submitted on this form in accordance with the IOG [Privacy Policy](https://static.iohk.io/terms/iog-privacy-policy.pdf)* \n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project\n\n*   [IOHK Privacy Policy](https://static.iohk.io/terms/iog-privacy-policy.pdf)\n*   [IOHK Terms & Conditions](https://static.iohk.io/terms/iog-terms-and-conditions.pdf)\n",
  "images": [],
  "extraction_metadata": {
    "batch_number": 5,
    "extraction_timestamp": "2025-09-19T13:29:20.689653",
    "extraction_time": 0.9595048427581787,
    "source": "tavily_api_raw"
  }
}