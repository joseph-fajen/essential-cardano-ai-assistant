{
  "url": "https://docs.cardano.org/about-cardano/learn/consensus-explained",
  "content": "Opens in a new window Opens an external website Opens an external website in a new window\n\nThis website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising. To learn more, view the following link:    [Privacy Policy](https://static.iohk.io/terms/iog-privacy-policy.pdf)[Cookie Policy](https://static.iohk.io/terms/iog-cookie-policy.pdf)\n\n[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n# Consensus explained\n\nConsensus is the process of reaching a majority opinion by everyone involved in\nrunning the blockchain. An agreement must be made on which blocks to produce,\nwhich chain to adopt and to determine the single state of the network. The\nconsensus protocol determines how individual nodes assess the current state of\nthe ledger system and reach a consensus.\n\nBlockchains create consensus by allowing participants to bundle transactions\nthat others have submitted to the system in blocks, and add them to their chain\n(sequence of blocks). Determining who is allowed to produce a block when, and\nwhat to do in case of conflicts, (such as two participants adding different\nblocks at the same point of the chain), is the purpose of the different\nconsensus protocols.\n\nThe protocol has three main responsibilities:\n\n* perform a leader check and decide if a block should be produced\n* handle chain selection\n* verify produced blocks.\n\n## About Ouroboros[​](#about-ouroboros \"Direct link to About Ouroboros\")\n\nCardano runs on the Ouroboros consensus protocol, which was delivered with\nseveral peer-reviewed papers presented at top-tier conferences and publications\nin the area of cybersecurity and cryptography. Rather than relying on 'miners'\n(as in proof-of-work protocols) to solve computationally complex equations to\ncreate new blocks – and rewarding the first to do so – proof of stake selects\n[stake pools to create new blocks](/about-cardano/learn/cardano-node#how-does-it-work)\nbased on the stake they control in the network.\n\n## How Ouroboros works[​](#how-ouroboros-works \"Direct link to How Ouroboros works\")\n\nOuroboros divides time on Cardano into epochs where each epoch is divided into\nslots. A slot is a short period of time in which a block can be created.\nGrouping slots into epochs is central to adjusting the leader election process\nto the dynamically changing stake distribution.\n\nCentral to Ouroboros’ design is that it must retain its security in the presence\nof attacks. As such, the protocol has built-in tolerance to prevent attackers\nfrom propagating alternative versions of the blockchain and assumes that an\nadversary may send arbitrary messages to any participant at any time. The\nprotocol is guaranteed to be secure in the so-called synchronous setting (that\nis, with strong guarantees on message delivery times) so long as more than 51%\nof the stake is controlled by honest participants (ie, those following the\nprotocol).\n\nA slot leader is elected for each slot, who is responsible for adding a block to\nthe chain and passing it to the next slot leader. To protect against adversarial\nattempts to subvert the protocol, each new slot leader is required to consider\nthe last few blocks of the received chain as transient: only the chain that\nprecedes the prespecified number of transient blocks is considered settled. This\nis also referred to as the settlement delay. Among other things, this means that\na stakeholder can go offline and still be synced to the blockchain, so long as\nit’s not for more than the settlement delay.\n\nWithin the Ouroboros protocol, each network node stores a copy of the\ntransaction mempool – where transactions are added if they are consistent with\nexisting transactions – and the blockchain. The locally stored blockchain is\nreplaced when the node becomes aware of an alternative, longer valid chain.\n\nRead the following section to learn more about the different types of Ouroboros.\n\nOn this page\n\n* [About Ouroboros](#about-ouroboros)\n* [How Ouroboros works](#how-ouroboros-works)",
  "images": [],
  "extraction_metadata": {
    "batch_number": 2,
    "extraction_timestamp": "2025-09-19T13:29:08.434392",
    "extraction_time": 1.0740139484405518,
    "source": "tavily_api_raw"
  }
}