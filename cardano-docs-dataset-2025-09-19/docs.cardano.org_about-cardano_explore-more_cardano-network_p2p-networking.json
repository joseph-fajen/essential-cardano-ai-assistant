{
  "url": "https://docs.cardano.org/about-cardano/explore-more/cardano-network/p2p-networking",
  "content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Peer-to-peer (P2P) networking\n\nCardano nodes and the interactions between them are combined together within a\nnetworking layer, which distributes information about transactions and block\ncreation among all active nodes. In this way, the system validates and adds\nblocks to the chain and also verifies transactions. A distributed network of\nnodes must keep communication delays to a minimum, and be resilient enough to\ncope with failures or capacity constraints.\n\nIn the Byron federated system, nodes were connected by a static configuration\nthat was defined in a topology file. Since the introduction of Shelley, the\nsystem has been functioning in a hybrid mode. Moving from the federated state of\nnetwork connectivity to the hybrid one, the teams delivered a manually\nconstructed P2P network of SPO relay nodes. This means that SPO block-producing\nnodes can connect to both trusted relay nodes and other SPO-run relay nodes.\nHybrid connectivity is not automated, however, it enables the exchange of block\nand transaction information without relying on trusted relays only.\n\nA trusted relay is the one that the SPO, wallet, or exchange accessing the\nnetwork ‘trusts’. Though this role has mostly been performed by IOG, other\nentities, such as the Cardano Foundation, a wallet, or exchanges can also run\ntrusted relays. Block-producing nodes can connect to any relays they deem\ntrustable.\n\n![federated](https://ucarecdn.com/dcd6bf70-5c73-4fbc-8683-1f199e8f554b/)\n\n![federated](https://ucarecdn.com/dcd6bf70-5c73-4fbc-8683-1f199e8f554b/)\n\n![hybrid](https://ucarecdn.com/3e7d4b86-040c-416a-9eda-076e8ffe41c9/)\n\n![hybrid](https://ucarecdn.com/3e7d4b86-040c-416a-9eda-076e8ffe41c9/)\n\n![dynamic-p2p](https://ucarecdn.com/48167b72-9192-42e0-a367-5f3e40612388/)\n\n![dynamic-p2p](https://ucarecdn.com/48167b72-9192-42e0-a367-5f3e40612388/)\n\nTo ensure efficient communication between nodes, it is desirable to enable\nautomated connections of SPO relays to each other, so that less static\nconfiguration is needed. Dynamic P2P has been gradually enabled since the node\n[v.1.35.6](https://github.com/input-output-hk/cardano-node/releases/tag/1.35.6)\nrelease. For more details, see\n[this blog post](https://iohk.io/en/blog/posts/2023/03/16/dynamic-p2p-is-coming-to-cardano/).\n\nWith the deployment of Dynamic P2P, networking keeps evolving with\nadditions such as Ouroboros Genesis and peer sharing:\n\n![genesis](https://ucarecdn.com/9ce084f4-28d6-4557-919e-d60a18ded168/)\n\n![genesis](https://ucarecdn.com/9ce084f4-28d6-4557-919e-d60a18ded168/)\n\n![peer-sharing](https://ucarecdn.com/9359a2da-a6ed-4edd-89b4-508ae96145e7/)\n\n![peer-sharing](https://ucarecdn.com/9359a2da-a6ed-4edd-89b4-508ae96145e7/)\n\n## Dynamic P2P capabilities[​](#dynamic-p2p-capabilities \"Direct link to Dynamic P2P capabilities\")\n\nThe network stack undergoes a number of improvements to achieve the desired\nnetwork resilience. These improvements do not require a protocol change, but\nrather enable automated peer selection and communication between peers and\nnodes.\n\nThe P2P networking is enabled due to the use of the following components:\n\nNext, we take a closer look at how the outbound governor works to ensure\nautomated connectivity between peer nodes on the network.\n\n### Outbound governor functionality[​](#outbound-governor-functionality \"Direct link to Outbound governor functionality\")\n\nThe Cardano network consists of multiple peer nodes. Some peer nodes are more\nactive than others, some have established connections, and some should be\npromoted to ensure the best system performance. Each block-producing node\nmaintains a set of peers mapped into three categories:\n\nNewly discovered peers are initially added to the cold peer set. The outbound\ngovernor is then responsible for peer connection management: it defines which\npeers are beneficial for connection purposes, and which should be promoted or\ndemoted between cold, warm, or hot sets.\n\nThe primary goal of the outbound governor is to maintain the target number of\ncold, warm, and hot peers. This builds and maintains a connectivity map of the\nlocal part of the network, and simplifies the process of connection definitions\nby handling them automatically.\n\nTo establish connectivity between nodes, the outbound governor engages in the\nfollowing activities:\n\nThe outbound governor needs to establish and maintain:\n\n![peer-discovery](https://ucarecdn.com/b6bae79e-5960-4d4e-9f6c-993a100b01c3/)\n\n![peer-discovery](https://ucarecdn.com/b6bae79e-5960-4d4e-9f6c-993a100b01c3/)\n\nUsing 2–20 hot peers is cost-efficient, as peers exchange only their block\nheaders. The block body, in turn, is typically requested only once, and it tends\nto follow the shortest path through the connectivity graph.\n\nThe purpose of warm peers is to provide access to those peers that can be\nquickly promoted to hot ones (in case any of the hot peers fail), and also\nprovide candidates for the churn of hot peers.\n\nThe policy for selecting which warm peers to promote to hot relies on the\nupstream measurements. The purpose of a degree of churn between cold and warm\npeers is, in part, to discover the network distance between more peers and to\nallow potentially better warm peers to take over from existing hot peers. This\nenables further optimization and adjustments. Maintaining diversity in hop\ndistances contributes to better block distribution times across the globally\ndistributed network.\n\nOverall, this approach follows a common pattern for probabilistic search or\noptimization that uses a balance of local optimization with some elements of\nhigher-order disruption to avoid becoming trapped in a poor local optimum.\n\nPeers maintain a limited set of information, which is based on their previous\ndirect interactions. Cold peers, for instance, may not maintain any data, as\nthey have not established interactions yet. Such data can be compared to a\n‘reputation’ property, however, these details are purely local and are not\nshared among other nodes. Local peer reputation information is also updated when\npeer connections fail. The network does not maintain negative peer information\nfor extended periods of time: to bound resources and because of the simplicity\nof\n[Sybil attacks](https://iohk.io/en/blog/posts/2018/10/29/preventing-sybil-attacks/).\n\nThe implementation classifies exceptions that cause connection failures into\nthree classes:\n\nIn the case of adversarial behavior, the peer can be immediately demoted from\nthe hot, warm, or cold sets.\n\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
  "images": [],
  "extraction_metadata": {
    "batch_number": 2,
    "extraction_timestamp": "2025-09-19T13:29:08.434392",
    "extraction_time": 1.0740139484405518,
    "source": "tavily_api_raw"
  }
}