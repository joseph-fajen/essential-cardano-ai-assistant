{
  "url": "https://docs.cardano.org/about-cardano/learn/cardano-addresses",
  "content": "Opens in a new window Opens an external website Opens an external website in a new window\n\nThis website utilizes technologies such as cookies to enable essential site functionality, as well as for analytics, personalization, and targeted advertising. To learn more, view the following link:    [Privacy Policy](https://static.iohk.io/terms/iog-privacy-policy.pdf)[Cookie Policy](https://static.iohk.io/terms/iog-cookie-policy.pdf)\n\n[Skip to main content](#__docusaurus_skipToContent_fallback)\n\n# Cardano addresses\n\nThe addresses are a blake2b-224 hash of the relevant verifying/public keys\nconcatenated with some metadata that can be stored on the\n[Cardano blockchain](https://cardano.org/).\n\nShelley introduced four different types of addresses:\n\n* base addresses\n* pointer addresses\n* enterprise addresses\n* reward account addresses.\n\nBesides those new addresses, Shelley continued to support Byron-era *bootstrap\naddresses* and *script addresses*, but only the new base and pointer addresses\ncarried stake rights. Therefore, addresses consist of some serialized data\nspecified in the ledger specification stored in the blockchain’s blocks, eg, an\nUnspent Transaction Output (UTXO) address.\n\nThe serialized data (address) contains two parts:\n\n* metadata: used for interpreting\n* payload: the raw or encoded data.\n\n## Base addresses[​](#base-addresses \"Direct link to Base addresses\")\n\nA base address directly specifies the staking key that should control the stake\nfor that address. The staking rights associated with funds held in this address\nmay be exercised by the owner of the staking key. Base addresses can be used in\ntransactions without registering the staking key in advance.\n\nThe stake rights can only be exercised by registering the stake key and\ndelegating to a stake pool. Once the stake key is\nregistered, the stake rights can be exercised for base addresses used in\ntransactions before or after the key registration.\n\n## Pointer addresses[​](#pointer-addresses \"Direct link to Pointer addresses\")\n\nA pointer address indirectly specifies the staking key that should control the\nstake for the address. It references a stake key by a stake key pointer, which\nis a location on the blockchain of the stake key registration certificate for\nthat key. Pointer addresses can be used in transactions, even if their target is\nnot an active stake key registration. This covers the scenario where the key was\nunregistered after (or indeed, before) the transaction, and also covers pointers\nto targets that are plainly invalid. The reason for allowing such invalid\ntargets is so that nodes only need to track the *currently active* stake keys.\n\nThe pointer can be considerably shorter than the hash used in base addresses.\n\nThere is a subtlety with pointer addresses. It might happen that a stake key\nregistration certificate referenced by a pointer address might be lost due to a\nrollback. To prevent loss of funds in this scenario, the system considers\npointer addresses with an invalid pointer to be *valid* for the purpose of using\nfunds stored therein as inputs for transactions (but ignores them for the\npurpose of proof of stake participation). Optionally, a wallet might refuse to\ncreate transactions to pointer addresses before the referenced certificate has\nbecome immutable, to prevent funds from being excluded from the proof of stake,\nin the case of rollbacks.\n\n## Enterprise addresses[​](#enterprise-addresses \"Direct link to Enterprise addresses\")\n\nEnterprise addresses carry no stake rights, so using these addresses means that\nyou are opting out of participation in the proof-of-stake protocol.\n\nExchanges or other organizations that control large amounts of ada – but hold it\non behalf of other users – may wish to follow a policy of not exercising stake\nrights. By using enterprise addresses, exchanges can demonstrate that they\nfollow this policy. Since enterprise addresses are not associated with any\nstaking key, they are automatically excluded from the mechanisms that influence\nthe slot leadership schedule. Note that using addresses with no stake rights\neffectively decreases the total amount of stake, which plays into the hands of a\npotential adversary.\n\nAlso note that enterprise addresses may still be used to receive, hold, and send  \ntokens with a policyID (non-ada assets).\n\n## Reward account addresses[​](#reward-account-addresses \"Direct link to Reward account addresses\")\n\nA reward address is a cryptographic hash of the public staking key of the\naddress. Reward account addresses are used to distribute rewards for\nparticipating in the proof-of-stake protocol (either directly or via\ndelegation).\n\nThey have the following properties:\n\n* account-style accounting is used, not UTXO-style\n* funds cannot be received via transactions; instead, their balance is only\n  increased when rewards are distributed\n* a one-to-one correspondence exists between registered staking keys and reward\n  account addresses.\n\nThis key is used whenever funds are withdrawn from the address. Furthermore,\nstake associated with funds in the address contributes to the stake of this key.\nJust as in the case of enterprise addresses, the staking object for a reward\naddress does not need to contain information.\n\nOn this page\n\n* [Base addresses](#base-addresses)\n* [Pointer addresses](#pointer-addresses)\n* [Enterprise addresses](#enterprise-addresses)\n* [Reward account addresses](#reward-account-addresses)",
  "images": [],
  "extraction_metadata": {
    "batch_number": 2,
    "extraction_timestamp": "2025-09-19T13:29:08.434392",
    "extraction_time": 1.0740139484405518,
    "source": "tavily_api_raw"
  }
}