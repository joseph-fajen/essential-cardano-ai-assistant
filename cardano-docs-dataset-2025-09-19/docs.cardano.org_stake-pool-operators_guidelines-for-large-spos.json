{
  "url": "https://docs.cardano.org/stake-pool-operators/guidelines-for-large-spos",
  "content": "![Cardano logo](/assets/cardano-logo.svg)\n![Cardano logo](/assets/cardano-logo.svg)\n\n# Guidelines for operating large stake pools\n\nThis section provides guidelines for operators of large stake pools,\nspecifically how to manage the risks and complexity of maintaining significant\nstake or multiple pools. Operators of smaller stake pools may also find much of\nthis advice useful to them.\n\n### Main recommendations[​](#main-recommendations \"Direct link to Main recommendations\")\n\n### Managing risks and complexity[​](#managing-risks-and-complexity \"Direct link to Managing risks and complexity\")\n\nOperating stake pools effectively is crucial to ensure the long-term health and\nliveliness of decentralization on Cardano. When a stake pool operator (SPO)\noperates multiple stake pools (or has a single pool that directly controls a\nsignificant percentage of the total staked ada), they may have a significant\neffect on the overall system throughput as a consequence of the “proof-of-stake”\nprinciple.\n\nThe Cardano design and security analysis assume that each stake pool operates in\na broadly independent and mutually supportive (non-adversarial) manner. This\nmeans that large SPOs have a particular responsibility to ensure that their\noperation supports the needs of the network as a whole. For this, it is\nessential to evaluate and address common risks that may be experienced in stake\npool operations.\n\n**Virtualization and containerization risks**\n\nBecause stake pools and relay nodes have specific real-time requirements, it is\ngenerally not recommended to run Cardano nodes on virtualized resources without\nundertaking careful performance, reliability, and security analyses. The mapping\nof Cardano nodes to the underlying physical infrastructure must consider timing\nissues for block production and propagation.\n\n**Security and common-mode failures**\n\nThe risks of operating a stake pool using container-based virtualization include\nincreased chances of common-mode system failures, resource contention, and\nincreased exposure to security risks (including DOS attacks and loss of private\nkeys). The use of containerized environments, where relay nodes share the same\nphysical infrastructure as stake pool nodes, may impact real-time requirements\non block production and networking infrastructure, thus reducing stake pool\nincome. Moreover, concentrating network connections (as may happen with\nvirtualized or containerized services) increases the chances of a DOS attack, as\nwell as reduces network redundancy in non-obvious ways. In a virtualized or\nshared environment, a single NIC/cable failure or DOS attack, for instance,\nmight then affect multiple stake pools or relay nodes, including those that\nmight be run by different SPOs.\n\n**Shared resources**\n\nThe diffusion of a newly minted block causes a “pulse” of activity to occur.\nStake pools and relay nodes that share physical computing resources will be\nforced to compete for shared CPU, memory, storage, networking, and other\nresources. The demand for these resources is not smooth, it is correlated by the\nblock diffusion. This can negatively affect block production or result in\nblockchain synchronization failures. Under some conditions, performance can\ndegrade in a non-linear way (e.g., adding a second node may reduce performance\nby more than 50%). To eliminate such risks, it is important to analyze\nperformance requirements not only for the typical load but also for limit cases.\n\n**Maintenance and upgrade**\n\nSystem maintenance and upgrades should be always taken into consideration.\nAlthough migration of a virtualized instance to new hardware, or duplication of\na running instance might seem easy, this commonly results in some timing\ndisruption. This is more significant in a real-time setting (such as Cardano)\nthan for typical data processing applications, which often have high levels of\nreplication and redundancy. System upgrades may also have unexpected effects on\nthe virtualized system’s performance, or occasionally, functionality. SPOs,\ntherefore, need to be aware of underlying system maintenance and take\nappropriate action to avoid losing blocks (and income).\n\n**Geographical and physical concentration**\n\nVirtualized systems are often concentrated into a few large data centers. This\ncreates potential points of common network failures, including reliance on\nspecific portions of national infrastructures (internet backbones, power grids,\netc). Large SPOs should aim to disperse their operations across multiple\nregions, and very large operators should aim for a global presence.\n\n### Provisioning[​](#provisioning \"Direct link to Provisioning\")\n\nTo ensure overall network resilience and robustness, SPOs that operate large\nstake pools must take special care of:\n\n**Stake pool configuration**\n\n**Security preferences**\n\n**General advice**:\n\n#### Example system and relay topology configurations[​](#example-system-and-relay-topology-configurations \"Direct link to Example system and relay topology configurations\")\n\nThere is no standard system configuration as every stake pool has different\noperational requirements and preferences. It is the choice of an SPO on how to\nconfigure the topology.\n\nHowever, taking into account the earlier advice, it is recommended that an SPO\nmaintains at least two and an additional relay node(s) per a stake pool. In the\ncase of running multiple stake pools, it is best that SPOs use geographically\ndiverse peers, spread relay nodes across the world, and reach out to other SPOs\n(particularly other large ones) making agreements to add each other's relay\nnodes. The more SPOs they have peer-sharing agreements with, the more likely\ntheir blocks will propagate and get included in the chain.\n\nMonitoring is important for all SPOs, and it is essentially a responsibility of\nan operator to ensure the quality of their pools’ functionality. As an example\nof a monitoring process that reflects Prometheus rules alerting on thresholds,\none can take a look at the\n[cardano-ops repository here](https://github.com/input-output-hk/cardano-ops/blob/master/modules/monitoring-cardano.nix#L13).\n\n**Example relay topology**\n\n*Please note that IOHK relay nodes are outlined as examples.*\n\n`{  \n \"Producers\": [  \n {  \n \"addr\": \"north-america.relays-new.cardano-mainnet.iohk.io\",  \n \"port\": 3001,  \n \"valency\": 4  \n },  \n {  \n \"addr\": \"asia-pacific.relays-new.cardano-mainnet.iohk.io\",  \n \"port\": 3001,  \n \"valency\": 4  \n },  \n {  \n \"addr\": \"europe.relays-new.cardano-mainnet.iohk.io\",  \n \"port\": 3001,  \n \"valency\": 4  \n }  \n ]  \n}`\n\n#### Node configuration options[​](#node-configuration-options \"Direct link to Node configuration options\")\n\nThe `MaxConcurrencyDeadline` configuration option controls how many attempts the\nnode will run in parallel to fetch the same block. Considering that getting the\nsame block as soon as possible is important for both relay nodes and block\nproducer nodes, we recommend setting the MaxConcurrencyDeadline value to 4.\n\n`MaxConcurrencyDeadline`\n\n### Delegation and pledging advice[​](#delegation-and-pledging-advice \"Direct link to Delegation and pledging advice\")\n\n**Delegation**\n\nStake delegation is the process of allocating individual stakeholders’ funds to\ncollective stake pools. Delegation is performed for block production purposes to\nensure that the block creation complies with the *proof-of-stake* consensus. By\ndelegating, stakeholders do not transfer stake ownership, voting or other\nrights.\n\nLarge SPOs will generally control a significant amount of third-party stake to\nmaintain trust in the blockchain, thus being responsible for:\n\nLarge operators are not responsible for distributing block production rewards to\ndelegators as this is handled automatically by the blockchain. SPOs are also not\nresponsible for securing delegator keys or taking delegation, voting, or other\nactions on behalf of stakeholders. Individual stakeholders must take personal\nresponsibility for their own security and must make their own decisions in terms\nof delegation, voting, etc.\n\n**Pledging**\n\nPledging is an important mechanism for producing Cardano’s healthy ecosystem.\nSPOs may opt to pledge some, or all, of their ada to the pool in order to make\nit more attractive to other delegators, and thus to grow the size of the pool as\na whole. Pledged ada may be supplied either by an SPO or by other owners.\n\n**Pledging rewards**\n\nPledge influences the rewards that a stake pool can earn, and thus the rewards\nthat delegators can obtain from the pool. The pledging amount may be specified,\nif desired, during the pool registration, and can then be changed on an\nepoch-by-epoch basis. No minimum pledge is required, however, there is also no\nmaximum pledge.\n\nGiven two equivalent stake pools, the one with the greater pledge will earn more\nrewards, and therefore be more attractive to other delegators. However, the SPO\nor other pool owners should collectively meet the pledge by delegating. It is\nalso important to ensure that there are enough funds in addresses that use the\npool owner's address(es) as stake reference. **Failure to meet the pledge** will\nmean that no rewards can be earned for the pool by any owner or delegator. This\nwill generally result in loss of delegation and *perhaps* pool collapse.\n\n*Unlike delegation, the SPO is responsible for distributing all pledging\nrewards. This may be done in any agreed manner and is not enforced by the\nblockchain*.\n\nCollective stake pool operation (maintained by an operator and a group of\nowners, pledging their stake) requires mutual trust and is a good way to build a\nlarger pool while sharing the risks and rewards.\n\n**Defense against Sybil attacks**\n\nThe pledging mechanism is designed to mitigate against\n[Sybil attacks](https://iohk.io/en/blog/posts/2018/10/29/preventing-sybil-attacks/),\nwhich could theoretically allow a proof-of-stake network to be taken over\nwithout supplying a significant personal stake. By making pools with higher\npledges more attractive, such attacks are prevented. The pledge formula is\ndesigned so that a pool with a higher pledge will produce higher rewards and\nthus become more attractive. To conduct a Sybil attack, an adversary must divide\ntheir pledge amongst a large number of pools. Since this will dilute each pool\npledge, delegators will be motivated by the rewards mechanism to re-delegate to\nnon-adversarial pools.\n\n![Cardano Logo](/assets/cardano-logo-blue.svg)\n![Cardano Logo](/assets/cardano-logo.svg)\n\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\n\nThis work is licensed under CC BY 4.0\n\n© IOHK 2015-2025 - IOHK Supported Project",
  "images": [],
  "extraction_metadata": {
    "batch_number": 5,
    "extraction_timestamp": "2025-09-19T13:29:20.689653",
    "extraction_time": 0.9595048427581787,
    "source": "tavily_api_raw"
  }
}